/**
 * Kore API
 * Kore API provides the frontend API (kore.appvia.io)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: info@appvia.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The V1ConfigSpec model module.
 * @module model/V1ConfigSpec
 * @version 0.0.1
 */
class V1ConfigSpec {
    /**
     * Constructs a new <code>V1ConfigSpec</code>.
     * @alias module:model/V1ConfigSpec
     * @param values {Object.<String, String>} 
     */
    constructor(values) { 
        
        V1ConfigSpec.initialize(this, values);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, values) { 
        obj['values'] = values;
    }

    /**
     * Constructs a <code>V1ConfigSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1ConfigSpec} obj Optional instance to populate.
     * @return {module:model/V1ConfigSpec} The populated <code>V1ConfigSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1ConfigSpec();

            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], {'String': 'String'});
            }
        }
        return obj;
    }

/**
     * @return {Object.<String, String>}
     */
    getValues() {
        return this.values;
    }

    /**
     * @param {Object.<String, String>} values
     */
    setValues(values) {
        this['values'] = values;
    }

}

/**
 * @member {Object.<String, String>} values
 */
V1ConfigSpec.prototype['values'] = undefined;






export default V1ConfigSpec;

