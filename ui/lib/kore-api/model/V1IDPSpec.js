/**
 * Kore API
 * Kore API provides the frontend API (kore.appvia.io)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: info@appvia.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import V1IDPConfig from './V1IDPConfig';

/**
 * The V1IDPSpec model module.
 * @module model/V1IDPSpec
 * @version 0.0.1
 */
class V1IDPSpec {
    /**
     * Constructs a new <code>V1IDPSpec</code>.
     * @alias module:model/V1IDPSpec
     * @param config {module:model/V1IDPConfig} 
     * @param displayName {String} 
     */
    constructor(config, displayName) { 
        
        V1IDPSpec.initialize(this, config, displayName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, config, displayName) { 
        obj['config'] = config;
        obj['displayName'] = displayName;
    }

    /**
     * Constructs a <code>V1IDPSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1IDPSpec} obj Optional instance to populate.
     * @return {module:model/V1IDPSpec} The populated <code>V1IDPSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1IDPSpec();

            if (data.hasOwnProperty('config')) {
                obj['config'] = V1IDPConfig.constructFromObject(data['config']);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
        }
        return obj;
    }

/**
     * @return {module:model/V1IDPConfig}
     */
    getConfig() {
        return this.config;
    }

    /**
     * @param {module:model/V1IDPConfig} config
     */
    setConfig(config) {
        this['config'] = config;
    }
/**
     * @return {String}
     */
    getDisplayName() {
        return this.displayName;
    }

    /**
     * @param {String} displayName
     */
    setDisplayName(displayName) {
        this['displayName'] = displayName;
    }

}

/**
 * @member {module:model/V1IDPConfig} config
 */
V1IDPSpec.prototype['config'] = undefined;

/**
 * @member {String} displayName
 */
V1IDPSpec.prototype['displayName'] = undefined;






export default V1IDPSpec;

