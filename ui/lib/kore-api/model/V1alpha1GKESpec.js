/**
 * Kore API
 * Kore API provides the frontend API (kore.appvia.io)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: info@appvia.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import V1Ownership from './V1Ownership';
import V1alpha1AuthorizedNetwork from './V1alpha1AuthorizedNetwork';
import V1alpha1GKENodePool from './V1alpha1GKENodePool';

/**
 * The V1alpha1GKESpec model module.
 * @module model/V1alpha1GKESpec
 * @version 0.0.1
 */
class V1alpha1GKESpec {
    /**
     * Constructs a new <code>V1alpha1GKESpec</code>.
     * @alias module:model/V1alpha1GKESpec
     * @param authorizedMasterNetworks {Array.<module:model/V1alpha1AuthorizedNetwork>} 
     * @param clusterIPV4Cidr {String} 
     * @param credentials {module:model/V1Ownership} 
     * @param description {String} 
     * @param enableHTTPLoadBalancer {Boolean} 
     * @param enableHorizontalPodAutoscaler {Boolean} 
     * @param enableIstio {Boolean} 
     * @param enablePrivateEndpoint {Boolean} 
     * @param enablePrivateNetwork {Boolean} 
     * @param enableShieldedNodes {Boolean} 
     * @param enableStackDriverLogging {Boolean} 
     * @param enableStackDriverMetrics {Boolean} 
     * @param maintenanceWindow {String} 
     * @param masterIPV4Cidr {String} 
     * @param releaseChannel {String} 
     * @param servicesIPV4Cidr {String} 
     * @param version {String} 
     */
    constructor(authorizedMasterNetworks, clusterIPV4Cidr, credentials, description, enableHTTPLoadBalancer, enableHorizontalPodAutoscaler, enableIstio, enablePrivateEndpoint, enablePrivateNetwork, enableShieldedNodes, enableStackDriverLogging, enableStackDriverMetrics, maintenanceWindow, masterIPV4Cidr, releaseChannel, servicesIPV4Cidr, version) { 
        
        V1alpha1GKESpec.initialize(this, authorizedMasterNetworks, clusterIPV4Cidr, credentials, description, enableHTTPLoadBalancer, enableHorizontalPodAutoscaler, enableIstio, enablePrivateEndpoint, enablePrivateNetwork, enableShieldedNodes, enableStackDriverLogging, enableStackDriverMetrics, maintenanceWindow, masterIPV4Cidr, releaseChannel, servicesIPV4Cidr, version);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, authorizedMasterNetworks, clusterIPV4Cidr, credentials, description, enableHTTPLoadBalancer, enableHorizontalPodAutoscaler, enableIstio, enablePrivateEndpoint, enablePrivateNetwork, enableShieldedNodes, enableStackDriverLogging, enableStackDriverMetrics, maintenanceWindow, masterIPV4Cidr, releaseChannel, servicesIPV4Cidr, version) { 
        obj['authorizedMasterNetworks'] = authorizedMasterNetworks;
        obj['clusterIPV4Cidr'] = clusterIPV4Cidr;
        obj['credentials'] = credentials;
        obj['description'] = description;
        obj['enableHTTPLoadBalancer'] = enableHTTPLoadBalancer;
        obj['enableHorizontalPodAutoscaler'] = enableHorizontalPodAutoscaler;
        obj['enableIstio'] = enableIstio;
        obj['enablePrivateEndpoint'] = enablePrivateEndpoint;
        obj['enablePrivateNetwork'] = enablePrivateNetwork;
        obj['enableShieldedNodes'] = enableShieldedNodes;
        obj['enableStackDriverLogging'] = enableStackDriverLogging;
        obj['enableStackDriverMetrics'] = enableStackDriverMetrics;
        obj['maintenanceWindow'] = maintenanceWindow;
        obj['masterIPV4Cidr'] = masterIPV4Cidr;
        obj['releaseChannel'] = releaseChannel;
        obj['servicesIPV4Cidr'] = servicesIPV4Cidr;
        obj['version'] = version;
    }

    /**
     * Constructs a <code>V1alpha1GKESpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1alpha1GKESpec} obj Optional instance to populate.
     * @return {module:model/V1alpha1GKESpec} The populated <code>V1alpha1GKESpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1alpha1GKESpec();

            if (data.hasOwnProperty('authorizedMasterNetworks')) {
                obj['authorizedMasterNetworks'] = ApiClient.convertToType(data['authorizedMasterNetworks'], [V1alpha1AuthorizedNetwork]);
            }
            if (data.hasOwnProperty('cluster')) {
                obj['cluster'] = V1Ownership.constructFromObject(data['cluster']);
            }
            if (data.hasOwnProperty('clusterIPV4Cidr')) {
                obj['clusterIPV4Cidr'] = ApiClient.convertToType(data['clusterIPV4Cidr'], 'String');
            }
            if (data.hasOwnProperty('credentials')) {
                obj['credentials'] = V1Ownership.constructFromObject(data['credentials']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('diskSize')) {
                obj['diskSize'] = ApiClient.convertToType(data['diskSize'], 'Number');
            }
            if (data.hasOwnProperty('enableAutorepair')) {
                obj['enableAutorepair'] = ApiClient.convertToType(data['enableAutorepair'], 'Boolean');
            }
            if (data.hasOwnProperty('enableAutoscaler')) {
                obj['enableAutoscaler'] = ApiClient.convertToType(data['enableAutoscaler'], 'Boolean');
            }
            if (data.hasOwnProperty('enableAutoupgrade')) {
                obj['enableAutoupgrade'] = ApiClient.convertToType(data['enableAutoupgrade'], 'Boolean');
            }
            if (data.hasOwnProperty('enableHTTPLoadBalancer')) {
                obj['enableHTTPLoadBalancer'] = ApiClient.convertToType(data['enableHTTPLoadBalancer'], 'Boolean');
            }
            if (data.hasOwnProperty('enableHorizontalPodAutoscaler')) {
                obj['enableHorizontalPodAutoscaler'] = ApiClient.convertToType(data['enableHorizontalPodAutoscaler'], 'Boolean');
            }
            if (data.hasOwnProperty('enableIstio')) {
                obj['enableIstio'] = ApiClient.convertToType(data['enableIstio'], 'Boolean');
            }
            if (data.hasOwnProperty('enablePrivateEndpoint')) {
                obj['enablePrivateEndpoint'] = ApiClient.convertToType(data['enablePrivateEndpoint'], 'Boolean');
            }
            if (data.hasOwnProperty('enablePrivateNetwork')) {
                obj['enablePrivateNetwork'] = ApiClient.convertToType(data['enablePrivateNetwork'], 'Boolean');
            }
            if (data.hasOwnProperty('enableShieldedNodes')) {
                obj['enableShieldedNodes'] = ApiClient.convertToType(data['enableShieldedNodes'], 'Boolean');
            }
            if (data.hasOwnProperty('enableStackDriverLogging')) {
                obj['enableStackDriverLogging'] = ApiClient.convertToType(data['enableStackDriverLogging'], 'Boolean');
            }
            if (data.hasOwnProperty('enableStackDriverMetrics')) {
                obj['enableStackDriverMetrics'] = ApiClient.convertToType(data['enableStackDriverMetrics'], 'Boolean');
            }
            if (data.hasOwnProperty('imageType')) {
                obj['imageType'] = ApiClient.convertToType(data['imageType'], 'String');
            }
            if (data.hasOwnProperty('machineType')) {
                obj['machineType'] = ApiClient.convertToType(data['machineType'], 'String');
            }
            if (data.hasOwnProperty('maintenanceWindow')) {
                obj['maintenanceWindow'] = ApiClient.convertToType(data['maintenanceWindow'], 'String');
            }
            if (data.hasOwnProperty('masterIPV4Cidr')) {
                obj['masterIPV4Cidr'] = ApiClient.convertToType(data['masterIPV4Cidr'], 'String');
            }
            if (data.hasOwnProperty('maxSize')) {
                obj['maxSize'] = ApiClient.convertToType(data['maxSize'], 'Number');
            }
            if (data.hasOwnProperty('network')) {
                obj['network'] = ApiClient.convertToType(data['network'], 'String');
            }
            if (data.hasOwnProperty('nodePools')) {
                obj['nodePools'] = ApiClient.convertToType(data['nodePools'], [V1alpha1GKENodePool]);
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('releaseChannel')) {
                obj['releaseChannel'] = ApiClient.convertToType(data['releaseChannel'], 'String');
            }
            if (data.hasOwnProperty('servicesIPV4Cidr')) {
                obj['servicesIPV4Cidr'] = ApiClient.convertToType(data['servicesIPV4Cidr'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('subnetwork')) {
                obj['subnetwork'] = ApiClient.convertToType(data['subnetwork'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], {'String': 'String'});
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

/**
     * @return {Array.<module:model/V1alpha1AuthorizedNetwork>}
     */
    getAuthorizedMasterNetworks() {
        return this.authorizedMasterNetworks;
    }

    /**
     * @param {Array.<module:model/V1alpha1AuthorizedNetwork>} authorizedMasterNetworks
     */
    setAuthorizedMasterNetworks(authorizedMasterNetworks) {
        this['authorizedMasterNetworks'] = authorizedMasterNetworks;
    }
/**
     * @return {module:model/V1Ownership}
     */
    getCluster() {
        return this.cluster;
    }

    /**
     * @param {module:model/V1Ownership} cluster
     */
    setCluster(cluster) {
        this['cluster'] = cluster;
    }
/**
     * @return {String}
     */
    getClusterIPV4Cidr() {
        return this.clusterIPV4Cidr;
    }

    /**
     * @param {String} clusterIPV4Cidr
     */
    setClusterIPV4Cidr(clusterIPV4Cidr) {
        this['clusterIPV4Cidr'] = clusterIPV4Cidr;
    }
/**
     * @return {module:model/V1Ownership}
     */
    getCredentials() {
        return this.credentials;
    }

    /**
     * @param {module:model/V1Ownership} credentials
     */
    setCredentials(credentials) {
        this['credentials'] = credentials;
    }
/**
     * @return {String}
     */
    getDescription() {
        return this.description;
    }

    /**
     * @param {String} description
     */
    setDescription(description) {
        this['description'] = description;
    }
/**
     * @return {Number}
     */
    getDiskSize() {
        return this.diskSize;
    }

    /**
     * @param {Number} diskSize
     */
    setDiskSize(diskSize) {
        this['diskSize'] = diskSize;
    }
/**
     * @return {Boolean}
     */
    getEnableAutorepair() {
        return this.enableAutorepair;
    }

    /**
     * @param {Boolean} enableAutorepair
     */
    setEnableAutorepair(enableAutorepair) {
        this['enableAutorepair'] = enableAutorepair;
    }
/**
     * @return {Boolean}
     */
    getEnableAutoscaler() {
        return this.enableAutoscaler;
    }

    /**
     * @param {Boolean} enableAutoscaler
     */
    setEnableAutoscaler(enableAutoscaler) {
        this['enableAutoscaler'] = enableAutoscaler;
    }
/**
     * @return {Boolean}
     */
    getEnableAutoupgrade() {
        return this.enableAutoupgrade;
    }

    /**
     * @param {Boolean} enableAutoupgrade
     */
    setEnableAutoupgrade(enableAutoupgrade) {
        this['enableAutoupgrade'] = enableAutoupgrade;
    }
/**
     * @return {Boolean}
     */
    getEnableHTTPLoadBalancer() {
        return this.enableHTTPLoadBalancer;
    }

    /**
     * @param {Boolean} enableHTTPLoadBalancer
     */
    setEnableHTTPLoadBalancer(enableHTTPLoadBalancer) {
        this['enableHTTPLoadBalancer'] = enableHTTPLoadBalancer;
    }
/**
     * @return {Boolean}
     */
    getEnableHorizontalPodAutoscaler() {
        return this.enableHorizontalPodAutoscaler;
    }

    /**
     * @param {Boolean} enableHorizontalPodAutoscaler
     */
    setEnableHorizontalPodAutoscaler(enableHorizontalPodAutoscaler) {
        this['enableHorizontalPodAutoscaler'] = enableHorizontalPodAutoscaler;
    }
/**
     * @return {Boolean}
     */
    getEnableIstio() {
        return this.enableIstio;
    }

    /**
     * @param {Boolean} enableIstio
     */
    setEnableIstio(enableIstio) {
        this['enableIstio'] = enableIstio;
    }
/**
     * @return {Boolean}
     */
    getEnablePrivateEndpoint() {
        return this.enablePrivateEndpoint;
    }

    /**
     * @param {Boolean} enablePrivateEndpoint
     */
    setEnablePrivateEndpoint(enablePrivateEndpoint) {
        this['enablePrivateEndpoint'] = enablePrivateEndpoint;
    }
/**
     * @return {Boolean}
     */
    getEnablePrivateNetwork() {
        return this.enablePrivateNetwork;
    }

    /**
     * @param {Boolean} enablePrivateNetwork
     */
    setEnablePrivateNetwork(enablePrivateNetwork) {
        this['enablePrivateNetwork'] = enablePrivateNetwork;
    }
/**
     * @return {Boolean}
     */
    getEnableShieldedNodes() {
        return this.enableShieldedNodes;
    }

    /**
     * @param {Boolean} enableShieldedNodes
     */
    setEnableShieldedNodes(enableShieldedNodes) {
        this['enableShieldedNodes'] = enableShieldedNodes;
    }
/**
     * @return {Boolean}
     */
    getEnableStackDriverLogging() {
        return this.enableStackDriverLogging;
    }

    /**
     * @param {Boolean} enableStackDriverLogging
     */
    setEnableStackDriverLogging(enableStackDriverLogging) {
        this['enableStackDriverLogging'] = enableStackDriverLogging;
    }
/**
     * @return {Boolean}
     */
    getEnableStackDriverMetrics() {
        return this.enableStackDriverMetrics;
    }

    /**
     * @param {Boolean} enableStackDriverMetrics
     */
    setEnableStackDriverMetrics(enableStackDriverMetrics) {
        this['enableStackDriverMetrics'] = enableStackDriverMetrics;
    }
/**
     * @return {String}
     */
    getImageType() {
        return this.imageType;
    }

    /**
     * @param {String} imageType
     */
    setImageType(imageType) {
        this['imageType'] = imageType;
    }
/**
     * @return {String}
     */
    getMachineType() {
        return this.machineType;
    }

    /**
     * @param {String} machineType
     */
    setMachineType(machineType) {
        this['machineType'] = machineType;
    }
/**
     * @return {String}
     */
    getMaintenanceWindow() {
        return this.maintenanceWindow;
    }

    /**
     * @param {String} maintenanceWindow
     */
    setMaintenanceWindow(maintenanceWindow) {
        this['maintenanceWindow'] = maintenanceWindow;
    }
/**
     * @return {String}
     */
    getMasterIPV4Cidr() {
        return this.masterIPV4Cidr;
    }

    /**
     * @param {String} masterIPV4Cidr
     */
    setMasterIPV4Cidr(masterIPV4Cidr) {
        this['masterIPV4Cidr'] = masterIPV4Cidr;
    }
/**
     * @return {Number}
     */
    getMaxSize() {
        return this.maxSize;
    }

    /**
     * @param {Number} maxSize
     */
    setMaxSize(maxSize) {
        this['maxSize'] = maxSize;
    }
/**
     * @return {String}
     */
    getNetwork() {
        return this.network;
    }

    /**
     * @param {String} network
     */
    setNetwork(network) {
        this['network'] = network;
    }
/**
     * @return {Array.<module:model/V1alpha1GKENodePool>}
     */
    getNodePools() {
        return this.nodePools;
    }

    /**
     * @param {Array.<module:model/V1alpha1GKENodePool>} nodePools
     */
    setNodePools(nodePools) {
        this['nodePools'] = nodePools;
    }
/**
     * @return {String}
     */
    getRegion() {
        return this.region;
    }

    /**
     * @param {String} region
     */
    setRegion(region) {
        this['region'] = region;
    }
/**
     * @return {String}
     */
    getReleaseChannel() {
        return this.releaseChannel;
    }

    /**
     * @param {String} releaseChannel
     */
    setReleaseChannel(releaseChannel) {
        this['releaseChannel'] = releaseChannel;
    }
/**
     * @return {String}
     */
    getServicesIPV4Cidr() {
        return this.servicesIPV4Cidr;
    }

    /**
     * @param {String} servicesIPV4Cidr
     */
    setServicesIPV4Cidr(servicesIPV4Cidr) {
        this['servicesIPV4Cidr'] = servicesIPV4Cidr;
    }
/**
     * @return {Number}
     */
    getSize() {
        return this.size;
    }

    /**
     * @param {Number} size
     */
    setSize(size) {
        this['size'] = size;
    }
/**
     * @return {String}
     */
    getSubnetwork() {
        return this.subnetwork;
    }

    /**
     * @param {String} subnetwork
     */
    setSubnetwork(subnetwork) {
        this['subnetwork'] = subnetwork;
    }
/**
     * @return {Object.<String, String>}
     */
    getTags() {
        return this.tags;
    }

    /**
     * @param {Object.<String, String>} tags
     */
    setTags(tags) {
        this['tags'] = tags;
    }
/**
     * @return {String}
     */
    getVersion() {
        return this.version;
    }

    /**
     * @param {String} version
     */
    setVersion(version) {
        this['version'] = version;
    }

}

/**
 * @member {Array.<module:model/V1alpha1AuthorizedNetwork>} authorizedMasterNetworks
 */
V1alpha1GKESpec.prototype['authorizedMasterNetworks'] = undefined;

/**
 * @member {module:model/V1Ownership} cluster
 */
V1alpha1GKESpec.prototype['cluster'] = undefined;

/**
 * @member {String} clusterIPV4Cidr
 */
V1alpha1GKESpec.prototype['clusterIPV4Cidr'] = undefined;

/**
 * @member {module:model/V1Ownership} credentials
 */
V1alpha1GKESpec.prototype['credentials'] = undefined;

/**
 * @member {String} description
 */
V1alpha1GKESpec.prototype['description'] = undefined;

/**
 * @member {Number} diskSize
 */
V1alpha1GKESpec.prototype['diskSize'] = undefined;

/**
 * @member {Boolean} enableAutorepair
 */
V1alpha1GKESpec.prototype['enableAutorepair'] = undefined;

/**
 * @member {Boolean} enableAutoscaler
 */
V1alpha1GKESpec.prototype['enableAutoscaler'] = undefined;

/**
 * @member {Boolean} enableAutoupgrade
 */
V1alpha1GKESpec.prototype['enableAutoupgrade'] = undefined;

/**
 * @member {Boolean} enableHTTPLoadBalancer
 */
V1alpha1GKESpec.prototype['enableHTTPLoadBalancer'] = undefined;

/**
 * @member {Boolean} enableHorizontalPodAutoscaler
 */
V1alpha1GKESpec.prototype['enableHorizontalPodAutoscaler'] = undefined;

/**
 * @member {Boolean} enableIstio
 */
V1alpha1GKESpec.prototype['enableIstio'] = undefined;

/**
 * @member {Boolean} enablePrivateEndpoint
 */
V1alpha1GKESpec.prototype['enablePrivateEndpoint'] = undefined;

/**
 * @member {Boolean} enablePrivateNetwork
 */
V1alpha1GKESpec.prototype['enablePrivateNetwork'] = undefined;

/**
 * @member {Boolean} enableShieldedNodes
 */
V1alpha1GKESpec.prototype['enableShieldedNodes'] = undefined;

/**
 * @member {Boolean} enableStackDriverLogging
 */
V1alpha1GKESpec.prototype['enableStackDriverLogging'] = undefined;

/**
 * @member {Boolean} enableStackDriverMetrics
 */
V1alpha1GKESpec.prototype['enableStackDriverMetrics'] = undefined;

/**
 * @member {String} imageType
 */
V1alpha1GKESpec.prototype['imageType'] = undefined;

/**
 * @member {String} machineType
 */
V1alpha1GKESpec.prototype['machineType'] = undefined;

/**
 * @member {String} maintenanceWindow
 */
V1alpha1GKESpec.prototype['maintenanceWindow'] = undefined;

/**
 * @member {String} masterIPV4Cidr
 */
V1alpha1GKESpec.prototype['masterIPV4Cidr'] = undefined;

/**
 * @member {Number} maxSize
 */
V1alpha1GKESpec.prototype['maxSize'] = undefined;

/**
 * @member {String} network
 */
V1alpha1GKESpec.prototype['network'] = undefined;

/**
 * @member {Array.<module:model/V1alpha1GKENodePool>} nodePools
 */
V1alpha1GKESpec.prototype['nodePools'] = undefined;

/**
 * @member {String} region
 */
V1alpha1GKESpec.prototype['region'] = undefined;

/**
 * @member {String} releaseChannel
 */
V1alpha1GKESpec.prototype['releaseChannel'] = undefined;

/**
 * @member {String} servicesIPV4Cidr
 */
V1alpha1GKESpec.prototype['servicesIPV4Cidr'] = undefined;

/**
 * @member {Number} size
 */
V1alpha1GKESpec.prototype['size'] = undefined;

/**
 * @member {String} subnetwork
 */
V1alpha1GKESpec.prototype['subnetwork'] = undefined;

/**
 * @member {Object.<String, String>} tags
 */
V1alpha1GKESpec.prototype['tags'] = undefined;

/**
 * @member {String} version
 */
V1alpha1GKESpec.prototype['version'] = undefined;






export default V1alpha1GKESpec;

