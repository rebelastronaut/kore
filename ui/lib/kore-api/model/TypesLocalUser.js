/**
 * Kore API
 * Kore API provides the frontend API (kore.appvia.io)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: info@appvia.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TypesLocalUser model module.
 * @module model/TypesLocalUser
 * @version 0.0.1
 */
class TypesLocalUser {
    /**
     * Constructs a new <code>TypesLocalUser</code>.
     * @alias module:model/TypesLocalUser
     */
    constructor() { 
        
        TypesLocalUser.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TypesLocalUser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TypesLocalUser} obj Optional instance to populate.
     * @return {module:model/TypesLocalUser} The populated <code>TypesLocalUser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TypesLocalUser();

            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

/**
     * @return {String}
     */
    getPassword() {
        return this.password;
    }

    /**
     * @param {String} password
     */
    setPassword(password) {
        this['password'] = password;
    }
/**
     * @return {String}
     */
    getUsername() {
        return this.username;
    }

    /**
     * @param {String} username
     */
    setUsername(username) {
        this['username'] = username;
    }

}

/**
 * @member {String} password
 */
TypesLocalUser.prototype['password'] = undefined;

/**
 * @member {String} username
 */
TypesLocalUser.prototype['username'] = undefined;






export default TypesLocalUser;

