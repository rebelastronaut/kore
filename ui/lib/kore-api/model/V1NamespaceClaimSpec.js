/**
 * Kore API
 * Kore API provides the frontend API (kore.appvia.io)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: info@appvia.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import V1Ownership from './V1Ownership';

/**
 * The V1NamespaceClaimSpec model module.
 * @module model/V1NamespaceClaimSpec
 * @version 0.0.1
 */
class V1NamespaceClaimSpec {
    /**
     * Constructs a new <code>V1NamespaceClaimSpec</code>.
     * @alias module:model/V1NamespaceClaimSpec
     * @param cluster {module:model/V1Ownership} 
     * @param name {String} 
     */
    constructor(cluster, name) { 
        
        V1NamespaceClaimSpec.initialize(this, cluster, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cluster, name) { 
        obj['cluster'] = cluster;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>V1NamespaceClaimSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1NamespaceClaimSpec} obj Optional instance to populate.
     * @return {module:model/V1NamespaceClaimSpec} The populated <code>V1NamespaceClaimSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1NamespaceClaimSpec();

            if (data.hasOwnProperty('annotations')) {
                obj['annotations'] = ApiClient.convertToType(data['annotations'], {'String': 'String'});
            }
            if (data.hasOwnProperty('cluster')) {
                obj['cluster'] = V1Ownership.constructFromObject(data['cluster']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

/**
     * @return {Object.<String, String>}
     */
    getAnnotations() {
        return this.annotations;
    }

    /**
     * @param {Object.<String, String>} annotations
     */
    setAnnotations(annotations) {
        this['annotations'] = annotations;
    }
/**
     * @return {module:model/V1Ownership}
     */
    getCluster() {
        return this.cluster;
    }

    /**
     * @param {module:model/V1Ownership} cluster
     */
    setCluster(cluster) {
        this['cluster'] = cluster;
    }
/**
     * @return {Object.<String, String>}
     */
    getLabels() {
        return this.labels;
    }

    /**
     * @param {Object.<String, String>} labels
     */
    setLabels(labels) {
        this['labels'] = labels;
    }
/**
     * @return {String}
     */
    getName() {
        return this.name;
    }

    /**
     * @param {String} name
     */
    setName(name) {
        this['name'] = name;
    }

}

/**
 * @member {Object.<String, String>} annotations
 */
V1NamespaceClaimSpec.prototype['annotations'] = undefined;

/**
 * @member {module:model/V1Ownership} cluster
 */
V1NamespaceClaimSpec.prototype['cluster'] = undefined;

/**
 * @member {Object.<String, String>} labels
 */
V1NamespaceClaimSpec.prototype['labels'] = undefined;

/**
 * @member {String} name
 */
V1NamespaceClaimSpec.prototype['name'] = undefined;






export default V1NamespaceClaimSpec;

