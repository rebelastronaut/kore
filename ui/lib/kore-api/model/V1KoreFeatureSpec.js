/**
 * Kore API
 * Kore API provides the frontend API (kore.appvia.io)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: info@appvia.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The V1KoreFeatureSpec model module.
 * @module model/V1KoreFeatureSpec
 * @version 0.0.1
 */
class V1KoreFeatureSpec {
    /**
     * Constructs a new <code>V1KoreFeatureSpec</code>.
     * @alias module:model/V1KoreFeatureSpec
     * @param configuration {Object.<String, String>} 
     * @param enabled {Boolean} 
     * @param featureType {String} 
     */
    constructor(configuration, enabled, featureType) { 
        
        V1KoreFeatureSpec.initialize(this, configuration, enabled, featureType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, configuration, enabled, featureType) { 
        obj['configuration'] = configuration;
        obj['enabled'] = enabled;
        obj['featureType'] = featureType;
    }

    /**
     * Constructs a <code>V1KoreFeatureSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1KoreFeatureSpec} obj Optional instance to populate.
     * @return {module:model/V1KoreFeatureSpec} The populated <code>V1KoreFeatureSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1KoreFeatureSpec();

            if (data.hasOwnProperty('configuration')) {
                obj['configuration'] = ApiClient.convertToType(data['configuration'], {'String': 'String'});
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('featureType')) {
                obj['featureType'] = ApiClient.convertToType(data['featureType'], 'String');
            }
        }
        return obj;
    }

/**
     * @return {Object.<String, String>}
     */
    getConfiguration() {
        return this.configuration;
    }

    /**
     * @param {Object.<String, String>} configuration
     */
    setConfiguration(configuration) {
        this['configuration'] = configuration;
    }
/**
     * @return {Boolean}
     */
    getEnabled() {
        return this.enabled;
    }

    /**
     * @param {Boolean} enabled
     */
    setEnabled(enabled) {
        this['enabled'] = enabled;
    }
/**
     * @return {String}
     */
    getFeatureType() {
        return this.featureType;
    }

    /**
     * @param {String} featureType
     */
    setFeatureType(featureType) {
        this['featureType'] = featureType;
    }

}

/**
 * @member {Object.<String, String>} configuration
 */
V1KoreFeatureSpec.prototype['configuration'] = undefined;

/**
 * @member {Boolean} enabled
 */
V1KoreFeatureSpec.prototype['enabled'] = undefined;

/**
 * @member {String} featureType
 */
V1KoreFeatureSpec.prototype['featureType'] = undefined;






export default V1KoreFeatureSpec;

