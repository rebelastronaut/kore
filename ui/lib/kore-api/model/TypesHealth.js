/**
 * Kore API
 * Kore API provides the frontend API (kore.appvia.io)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: info@appvia.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TypesHealth model module.
 * @module model/TypesHealth
 * @version 0.0.1
 */
class TypesHealth {
    /**
     * Constructs a new <code>TypesHealth</code>.
     * @alias module:model/TypesHealth
     * @param healthy {Boolean} 
     */
    constructor(healthy) { 
        
        TypesHealth.initialize(this, healthy);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, healthy) { 
        obj['healthy'] = healthy;
    }

    /**
     * Constructs a <code>TypesHealth</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TypesHealth} obj Optional instance to populate.
     * @return {module:model/TypesHealth} The populated <code>TypesHealth</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TypesHealth();

            if (data.hasOwnProperty('healthy')) {
                obj['healthy'] = ApiClient.convertToType(data['healthy'], 'Boolean');
            }
        }
        return obj;
    }

/**
     * @return {Boolean}
     */
    getHealthy() {
        return this.healthy;
    }

    /**
     * @param {Boolean} healthy
     */
    setHealthy(healthy) {
        this['healthy'] = healthy;
    }

}

/**
 * @member {Boolean} healthy
 */
TypesHealth.prototype['healthy'] = undefined;






export default TypesHealth;

