/**
 * Kore API
 * Kore API provides the frontend API (kore.appvia.io)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: info@appvia.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiserverError model module.
 * @module model/ApiserverError
 * @version 0.0.1
 */
class ApiserverError {
    /**
     * Constructs a new <code>ApiserverError</code>.
     * @alias module:model/ApiserverError
     * @param code {Number} 
     * @param detail {String} 
     * @param message {String} 
     * @param uri {String} 
     * @param verb {String} 
     */
    constructor(code, detail, message, uri, verb) { 
        
        ApiserverError.initialize(this, code, detail, message, uri, verb);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code, detail, message, uri, verb) { 
        obj['code'] = code;
        obj['detail'] = detail;
        obj['message'] = message;
        obj['uri'] = uri;
        obj['verb'] = verb;
    }

    /**
     * Constructs a <code>ApiserverError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiserverError} obj Optional instance to populate.
     * @return {module:model/ApiserverError} The populated <code>ApiserverError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiserverError();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'Number');
            }
            if (data.hasOwnProperty('detail')) {
                obj['detail'] = ApiClient.convertToType(data['detail'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
            if (data.hasOwnProperty('verb')) {
                obj['verb'] = ApiClient.convertToType(data['verb'], 'String');
            }
        }
        return obj;
    }

/**
     * @return {Number}
     */
    getCode() {
        return this.code;
    }

    /**
     * @param {Number} code
     */
    setCode(code) {
        this['code'] = code;
    }
/**
     * @return {String}
     */
    getDetail() {
        return this.detail;
    }

    /**
     * @param {String} detail
     */
    setDetail(detail) {
        this['detail'] = detail;
    }
/**
     * @return {String}
     */
    getMessage() {
        return this.message;
    }

    /**
     * @param {String} message
     */
    setMessage(message) {
        this['message'] = message;
    }
/**
     * @return {String}
     */
    getUri() {
        return this.uri;
    }

    /**
     * @param {String} uri
     */
    setUri(uri) {
        this['uri'] = uri;
    }
/**
     * @return {String}
     */
    getVerb() {
        return this.verb;
    }

    /**
     * @param {String} verb
     */
    setVerb(verb) {
        this['verb'] = verb;
    }

}

/**
 * @member {Number} code
 */
ApiserverError.prototype['code'] = undefined;

/**
 * @member {String} detail
 */
ApiserverError.prototype['detail'] = undefined;

/**
 * @member {String} message
 */
ApiserverError.prototype['message'] = undefined;

/**
 * @member {String} uri
 */
ApiserverError.prototype['uri'] = undefined;

/**
 * @member {String} verb
 */
ApiserverError.prototype['verb'] = undefined;






export default ApiserverError;

