/**
 * Kore API
 * Kore API provides the frontend API (kore.appvia.io)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: info@appvia.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The V1IDPClientSpec model module.
 * @module model/V1IDPClientSpec
 * @version 0.0.1
 */
class V1IDPClientSpec {
    /**
     * Constructs a new <code>V1IDPClientSpec</code>.
     * @alias module:model/V1IDPClientSpec
     * @param displayName {String} 
     * @param id {String} 
     * @param redirectURIs {Array.<String>} 
     * @param secret {String} 
     */
    constructor(displayName, id, redirectURIs, secret) { 
        
        V1IDPClientSpec.initialize(this, displayName, id, redirectURIs, secret);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, displayName, id, redirectURIs, secret) { 
        obj['displayName'] = displayName;
        obj['id'] = id;
        obj['redirectURIs'] = redirectURIs;
        obj['secret'] = secret;
    }

    /**
     * Constructs a <code>V1IDPClientSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1IDPClientSpec} obj Optional instance to populate.
     * @return {module:model/V1IDPClientSpec} The populated <code>V1IDPClientSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1IDPClientSpec();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('redirectURIs')) {
                obj['redirectURIs'] = ApiClient.convertToType(data['redirectURIs'], ['String']);
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
        }
        return obj;
    }

/**
     * @return {String}
     */
    getDisplayName() {
        return this.displayName;
    }

    /**
     * @param {String} displayName
     */
    setDisplayName(displayName) {
        this['displayName'] = displayName;
    }
/**
     * @return {String}
     */
    getId() {
        return this.id;
    }

    /**
     * @param {String} id
     */
    setId(id) {
        this['id'] = id;
    }
/**
     * @return {Array.<String>}
     */
    getRedirectURIs() {
        return this.redirectURIs;
    }

    /**
     * @param {Array.<String>} redirectURIs
     */
    setRedirectURIs(redirectURIs) {
        this['redirectURIs'] = redirectURIs;
    }
/**
     * @return {String}
     */
    getSecret() {
        return this.secret;
    }

    /**
     * @param {String} secret
     */
    setSecret(secret) {
        this['secret'] = secret;
    }

}

/**
 * @member {String} displayName
 */
V1IDPClientSpec.prototype['displayName'] = undefined;

/**
 * @member {String} id
 */
V1IDPClientSpec.prototype['id'] = undefined;

/**
 * @member {Array.<String>} redirectURIs
 */
V1IDPClientSpec.prototype['redirectURIs'] = undefined;

/**
 * @member {String} secret
 */
V1IDPClientSpec.prototype['secret'] = undefined;






export default V1IDPClientSpec;

