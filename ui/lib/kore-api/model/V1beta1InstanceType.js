/**
 * Appvia Kore API
 * Kore API provides the frontend API for the Appvia Kore (kore.appvia.io)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: info@appvia.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The V1beta1InstanceType model module.
 * @module model/V1beta1InstanceType
 * @version 0.0.1
 */
class V1beta1InstanceType {
    /**
     * Constructs a new <code>V1beta1InstanceType</code>.
     * @alias module:model/V1beta1InstanceType
     * @param category {String} 
     * @param mCpus {Number} 
     * @param mem {Number} 
     * @param name {String} 
     * @param prices {Object.<String, Number>} 
     */
    constructor(category, mCpus, mem, name, prices) { 
        
        V1beta1InstanceType.initialize(this, category, mCpus, mem, name, prices);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, category, mCpus, mem, name, prices) { 
        obj['category'] = category;
        obj['mCpus'] = mCpus;
        obj['mem'] = mem;
        obj['name'] = name;
        obj['prices'] = prices;
    }

    /**
     * Constructs a <code>V1beta1InstanceType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V1beta1InstanceType} obj Optional instance to populate.
     * @return {module:model/V1beta1InstanceType} The populated <code>V1beta1InstanceType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V1beta1InstanceType();

            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('mCpus')) {
                obj['mCpus'] = ApiClient.convertToType(data['mCpus'], 'Number');
            }
            if (data.hasOwnProperty('mem')) {
                obj['mem'] = ApiClient.convertToType(data['mem'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('prices')) {
                obj['prices'] = ApiClient.convertToType(data['prices'], {'String': 'Number'});
            }
        }
        return obj;
    }

/**
     * @return {String}
     */
    getCategory() {
        return this.category;
    }

    /**
     * @param {String} category
     */
    setCategory(category) {
        this['category'] = category;
    }
/**
     * @return {Number}
     */
    getMCpus() {
        return this.mCpus;
    }

    /**
     * @param {Number} mCpus
     */
    setMCpus(mCpus) {
        this['mCpus'] = mCpus;
    }
/**
     * @return {Number}
     */
    getMem() {
        return this.mem;
    }

    /**
     * @param {Number} mem
     */
    setMem(mem) {
        this['mem'] = mem;
    }
/**
     * @return {String}
     */
    getName() {
        return this.name;
    }

    /**
     * @param {String} name
     */
    setName(name) {
        this['name'] = name;
    }
/**
     * @return {Object.<String, Number>}
     */
    getPrices() {
        return this.prices;
    }

    /**
     * @param {Object.<String, Number>} prices
     */
    setPrices(prices) {
        this['prices'] = prices;
    }

}

/**
 * @member {String} category
 */
V1beta1InstanceType.prototype['category'] = undefined;

/**
 * @member {Number} mCpus
 */
V1beta1InstanceType.prototype['mCpus'] = undefined;

/**
 * @member {Number} mem
 */
V1beta1InstanceType.prototype['mem'] = undefined;

/**
 * @member {String} name
 */
V1beta1InstanceType.prototype['name'] = undefined;

/**
 * @member {Object.<String, Number>} prices
 */
V1beta1InstanceType.prototype['prices'] = undefined;






export default V1beta1InstanceType;

