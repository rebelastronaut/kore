// Code generated for package chart by go-bindata DO NOT EDIT. (@generated)
// sources:
// charts/kore/.helmignore
// charts/kore/Chart.yaml
// charts/kore/scripts/loadbalancer_endpoint_detect.sh
// charts/kore/templates/NOTES.txt
// charts/kore/templates/_helpers.tpl
// charts/kore/templates/endpoint_discover.yaml
// charts/kore/templates/ingress.yaml
// charts/kore/templates/kore.yml
// charts/kore/templates/mysql.yaml
// charts/kore/templates/portal.yml
// charts/kore/templates/secret.yaml
// charts/kore/values.yaml
package chart

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _koreHelmignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\x41\x6e\xe3\x30\x0c\x45\xf7\x3c\xc5\x1f\x78\x33\x63\x0c\xe4\x43\x24\xb3\x98\x55\x0b\xa4\xc8\xb6\x90\x6d\x46\x62\x22\x8b\x82\x44\x27\x6d\x17\x3d\x7b\x91\x04\x41\xbb\x79\x20\x3f\xc8\x8f\xd7\xe1\xd9\x9b\x71\xcd\x0d\xa6\x90\x90\xb5\x32\x2e\x91\x33\xc6\x55\xd2\x2c\x39\xa0\xf8\xe9\xe4\x03\x37\x47\x1d\x5e\xa2\x34\xb4\xb5\x14\xad\xd6\xd0\x22\xa7\x84\x90\x74\xc4\xe2\x6d\x8a\x92\xc3\x5f\x54\x4e\xde\xe4\xcc\x28\xde\xe2\x8f\xdc\xe7\x99\x3a\x64\x0e\xde\x44\x33\x7e\x97\xca\x07\x79\xe3\x19\x17\xb1\x88\x5f\x7f\x1c\x9e\x72\x7a\x87\xe6\xdb\xe7\x55\x09\x85\x2b\x92\x64\x76\xe4\xb6\xbb\xd7\x9d\x69\x65\xea\xb0\xd1\x65\xd1\x8c\xfd\x66\x87\x59\x6a\x23\x17\xc4\x86\x1b\xef\xfa\xe4\xc6\x8f\x3a\xdc\xf8\x08\x62\x18\xae\x78\xac\xed\x9c\x87\xef\xa2\xd1\x4f\xa7\xb5\xe0\x20\x89\x1b\xf5\xae\x5d\x0a\xf5\x6e\xf4\x27\xea\x9d\x2d\xd7\x59\xab\x04\xea\x3f\xa9\xc3\xde\x57\xd1\xb5\xe1\xff\xf6\x5f\x23\x57\xaa\x1e\x79\x32\x72\x32\xb3\x1f\xee\xe7\x55\x8f\xe4\xce\x6d\xd2\x99\x07\xfa\x0a\x00\x00\xff\xff\x16\xec\x32\x27\x5d\x01\x00\x00")

func koreHelmignoreBytes() ([]byte, error) {
	return bindataRead(
		_koreHelmignore,
		"kore/.helmignore",
	)
}

func koreHelmignore() (*asset, error) {
	bytes, err := koreHelmignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kore/.helmignore", size: 349, mode: os.FileMode(420), modTime: time.Unix(1585072441, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _koreChartYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2c\xc8\x0c\x4b\x2d\x2a\xce\xcc\xcf\xb3\x52\x28\x33\xe2\xca\x4b\xcc\x4d\xb5\x52\xc8\xce\x2f\x4a\xe5\x4a\x49\x2d\x4e\x2e\xca\x2c\x28\x01\x4b\x39\x2a\x78\xa4\xe6\xe4\x2a\x24\x67\x24\x16\x95\x28\xa4\xe5\x17\x41\x94\x94\x54\x16\xa4\x5a\x29\x24\x16\x14\xe4\x64\x26\x27\x82\x14\x72\x95\xc1\xcc\x32\xd0\x33\xd0\x33\xe4\x4a\x2c\x28\x08\x43\x88\x18\xeb\x19\x70\x01\x02\x00\x00\xff\xff\x60\x96\x3e\xee\x70\x00\x00\x00")

func koreChartYamlBytes() ([]byte, error) {
	return bindataRead(
		_koreChartYaml,
		"kore/Chart.yaml",
	)
}

func koreChartYaml() (*asset, error) {
	bytes, err := koreChartYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kore/Chart.yaml", size: 112, mode: os.FileMode(420), modTime: time.Unix(1597255295, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _koreScriptsLoadbalancer_endpoint_detectSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x53\xdd\x6a\xdb\x30\x18\xbd\xd7\x53\x9c\x29\xa6\x6d\x60\x76\xd6\x5d\x66\x04\xc6\x18\x7d\x82\xc2\x2e\x46\x09\xaa\xf4\x25\xfe\xa8\x2d\x19\xe9\xb3\xdb\xcd\xf8\xdd\x87\x9c\x9f\x65\x85\x76\x57\x16\xe8\xfc\x71\x8e\xbc\xf8\xb0\x7a\x64\xbf\x4a\xb5\x52\x89\x04\x25\x29\xb5\x58\xe0\x2e\x44\x24\x89\xec\xf7\x08\xbd\x74\xbd\x60\x17\x43\x8b\x5d\xef\xad\x70\xf0\xca\x91\x90\x95\x6d\xa2\x38\xb0\xa5\x2d\x79\xd7\x05\xf6\xb2\x0d\xbd\x6c\xb4\x7e\xeb\x1a\x37\x4b\x8c\x0a\xa0\x17\xa1\xe8\x4d\xb3\xe5\x2e\xa3\x01\xb2\x75\x80\xbe\x63\xef\xb2\xe3\x19\xbe\x0b\x11\xc5\x6d\x06\x3c\xd7\xdc\x10\x7e\xa2\xfc\x8d\xe2\x82\x8d\x87\x2f\x70\x41\x01\x27\x89\x1f\x86\x25\x4b\x64\x26\x79\x87\x59\xa7\xaa\x2a\x7d\xc0\x5c\xf8\x16\x37\x4f\xfd\x23\x59\x69\xb0\x27\x41\x1a\x2c\x8a\x5b\x94\xa5\x50\xdb\x35\x46\x68\xa3\xc7\x31\x1a\xbf\x27\x54\x49\x8c\xf4\xa9\x6a\x82\x71\xdf\x4c\x63\xbc\xa5\x58\xb1\xdf\x47\x4a\x69\x9a\xc6\xb1\xe2\x2e\x7f\xc8\xbb\x69\xd2\xcb\xd9\x67\xce\xa9\x2f\x83\x6a\x3c\xe0\xea\x0a\xa9\x21\xea\xf0\x59\x01\x2e\x78\x52\xc0\xa9\xa1\x2e\x44\xf9\x6f\xa4\xeb\x71\xc4\x0d\x7b\x47\x2f\xa8\x52\x47\xb6\xca\xac\x84\x4f\xcb\xf9\x80\x69\xba\x5e\xfe\xed\x32\xf4\xde\x81\xbb\xf5\x3f\x7d\xe9\x57\xf7\x99\xb7\x46\x71\x99\x42\xab\x9c\xee\xbd\x79\x2f\x05\xd7\xaf\xb8\x93\x52\x07\xfd\xef\x64\xb3\x44\xde\xe2\x88\x38\xcf\x9a\xce\xbb\x1e\xa0\xf7\x35\x27\xb4\xe6\x17\xc4\x3c\x11\x52\x68\x09\xc2\x2d\xcd\xab\x29\x1b\xda\xd6\x78\xb7\xd1\xa7\x6a\x6c\x24\x23\x84\x44\x36\x92\x60\x4f\x9e\x22\xe7\xa2\x4a\xc7\xc9\x86\x81\x22\xb9\xf2\xec\xa4\x95\x5a\xe0\xbe\x26\xec\x38\x26\xc1\x60\x22\x38\x41\x6a\x42\xa4\x86\x4c\x22\x78\xd3\xd2\x47\x3c\x13\x9e\x8d\x17\x48\x40\x7a\xe2\x0e\x2c\x2a\xd5\xbc\x13\xa5\x72\xd4\x99\xe6\xa1\x8b\xaf\x5a\x1d\x5f\xdb\x5b\x0f\xbc\x18\x4c\x9c\x01\xe7\xdc\xc5\xf1\x84\xb2\xcc\xbf\x50\xd9\xb0\x50\x34\xcd\x26\x23\x37\xb5\x48\xb7\x5e\xad\x8a\x77\xfa\xce\x96\x9e\x94\xa2\xc1\x34\x38\x89\xa9\x3f\x01\x00\x00\xff\xff\x7a\xd8\x0f\x3a\xb6\x03\x00\x00")

func koreScriptsLoadbalancer_endpoint_detectShBytes() ([]byte, error) {
	return bindataRead(
		_koreScriptsLoadbalancer_endpoint_detectSh,
		"kore/scripts/loadbalancer_endpoint_detect.sh",
	)
}

func koreScriptsLoadbalancer_endpoint_detectSh() (*asset, error) {
	bytes, err := koreScriptsLoadbalancer_endpoint_detectShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kore/scripts/loadbalancer_endpoint_detect.sh", size: 950, mode: os.FileMode(493), modTime: time.Unix(1585072441, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _koreTemplatesNotesTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xc1\xce\xd3\x40\x0c\x84\xef\x79\x8a\xd1\x2f\x0e\x45\x6a\xf3\x00\x1c\xe1\x8a\x40\x42\x15\x12\x47\x37\xeb\x24\xab\x6e\xbd\xc1\xeb\xa5\xaa\xa2\xbc\x3b\xda\x6d\x53\x0a\x14\xa4\xff\x16\x79\x3c\x63\x7f\xce\xee\x47\x92\x23\x2e\x31\xa3\x8f\x0a\x2f\xc9\x28\x04\x2f\x03\xe6\x19\xed\x87\x91\xd4\xda\x4f\x74\x62\x2c\x4b\xdb\x34\xfb\x88\xc0\xa4\x82\x53\x54\x06\x1d\x62\x36\xd8\xc8\x50\x0e\x4c\x89\xb7\x30\xbd\xbc\x6b\x1a\xe0\x0d\x46\x0e\x27\x24\x23\xcb\xa9\x46\x7d\xb9\xb6\xac\x61\xd8\xc9\x5f\xe5\x34\x51\x57\xb4\x5f\xfe\x81\x0d\x14\xc2\xab\x03\x9a\x79\x86\xef\x11\x15\x1b\xfe\x8e\xf6\x2b\x85\xcc\xa9\xa5\xc9\xb7\x89\xf5\x87\xef\x78\x7f\x99\x18\x2f\x1f\x23\xb9\xf7\x14\x48\x3a\xd6\x97\xb7\xbf\xf5\xe6\xff\xb7\x2e\x4b\xf3\x59\xb8\x0c\xa8\x97\x88\x7d\xb9\xa0\xe2\x66\x49\xa0\x6b\xd1\x8a\x37\x44\x72\x87\x9b\x75\x5b\x91\x6c\x64\xaf\x20\xe7\x94\x53\xe2\x84\xb3\xb7\xf1\x76\xb6\x63\x3e\x70\x67\x01\xbb\x9d\xdc\x81\xfe\x85\x59\xb3\xd6\x91\x2b\xb3\x44\xc3\xa6\x2c\xf6\x48\xcd\xe2\xa6\xe8\xc5\x5a\xc7\xc6\x9d\x3d\x52\xfe\x29\x55\xb6\x6f\x31\xe3\xec\x43\x80\x30\x3b\x58\x44\x17\xa5\xf7\x43\x56\x7e\x1e\x9b\x35\x80\xc4\x3d\xcd\x2d\x5a\x01\xac\x0f\x45\xf8\x8c\x55\x49\xd5\xa2\x59\x40\xd7\xbf\x9d\xa7\x41\xc9\x71\x25\x61\x71\x65\x91\xfb\xd7\xcf\x00\x00\x00\xff\xff\x8e\x66\x1d\xc2\xa7\x02\x00\x00")

func koreTemplatesNotesTxtBytes() ([]byte, error) {
	return bindataRead(
		_koreTemplatesNotesTxt,
		"kore/templates/NOTES.txt",
	)
}

func koreTemplatesNotesTxt() (*asset, error) {
	bytes, err := koreTemplatesNotesTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kore/templates/NOTES.txt", size: 679, mode: os.FileMode(420), modTime: time.Unix(1591698981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _koreTemplates_helpersTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xcd\x6a\xe3\x30\x14\x85\xf7\x7e\x8a\x8b\x20\x9b\x0c\x96\x17\x03\xb3\x08\xcc\x62\x08\xb3\x9d\x81\x06\xb2\x2d\xb2\x7d\x5c\x8b\x48\xb2\xaa\x1f\x93\xe0\xf8\xdd\x8b\x65\x07\x37\x6d\xb3\xe9\xee\x82\xce\xfd\xee\x77\x34\x0c\xc5\x96\x7a\xa9\x77\xe4\x11\xa8\x91\x0a\xe1\x62\xf1\x5b\x47\x1f\x44\xd5\x62\x47\xdb\x62\x1c\xb3\x29\x95\xfd\x3d\x5b\x61\x6a\x0a\x2d\xc8\x08\x0d\xea\x9a\x34\x57\xad\x70\x81\x67\x4b\x2e\xa7\x1a\x8d\x34\x20\x76\xea\x1c\xf8\x14\x64\x94\xaf\x4f\x22\xaa\x40\x7c\x9f\x76\xfe\x4d\x14\x7e\x14\x2a\xc2\xa7\xe4\xff\x1e\xce\xc9\x1a\x74\xa5\xe0\xa2\xa9\xe8\xd7\xcf\x34\x4a\x7d\x88\x4d\x23\xcf\xc4\xf2\x15\x06\x53\xa7\x79\x96\xdb\x3b\x88\xb0\xc8\xcc\x7a\x93\x6b\x0f\xe7\x65\x67\x48\x78\x8a\x1e\x35\x95\x97\x55\x99\x94\x28\xa1\x1e\x89\xa7\xc8\x7a\xcc\x3a\x69\x42\x43\x6c\xe3\xf3\x8d\x67\xf7\x05\xe6\xf9\xb8\x9c\xba\x92\x83\x55\xa2\x02\xb1\x1f\x8c\xd8\x33\xfb\x4e\x99\x4e\xeb\xce\xcc\x82\xfe\x81\xe0\xfc\x38\x13\x5a\x28\xcd\x7d\x5b\x24\xe9\x1d\x0d\x03\x49\x53\xa9\x58\x7f\x28\xc3\x69\x01\xc9\xe6\x66\xfd\xc7\xda\x9b\xf8\x38\x66\xc2\x5a\x7e\x8a\x25\x9c\x41\x80\xe7\xb2\x2b\x96\x0f\x4c\xcc\xcf\x2b\x57\x7a\x8d\x5d\x00\xbd\x2b\xf1\x25\x45\x0b\x23\x5e\x50\xe7\xe5\x65\x06\x3d\x41\x41\x78\xf0\x03\x5c\x2f\xab\xbb\xfd\xa9\xce\x5b\x00\x00\x00\xff\xff\x75\x9b\x09\x8c\x94\x02\x00\x00")

func koreTemplates_helpersTplBytes() ([]byte, error) {
	return bindataRead(
		_koreTemplates_helpersTpl,
		"kore/templates/_helpers.tpl",
	)
}

func koreTemplates_helpersTpl() (*asset, error) {
	bytes, err := koreTemplates_helpersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kore/templates/_helpers.tpl", size: 660, mode: os.FileMode(420), modTime: time.Unix(1585072441, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _koreTemplatesEndpoint_discoverYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\x4d\x8b\xe4\x36\x10\xbd\xfb\x57\x14\x62\x0f\x09\xc4\xf2\x34\x04\x26\xe8\x94\xec\x42\x16\xc2\xce\xb0\x4c\xc2\x5e\x42\x58\xca\x52\xb9\x5d\x69\x59\x72\x24\xb9\xc3\xc6\xe3\xff\x1e\x6c\xb7\xfb\x83\x6e\x3c\x24\x39\x64\x7c\xb2\x5f\x95\x9f\xab\x5e\xbd\xb2\xfa\x1e\xb8\x02\x1f\x40\x7e\x42\xdb\x51\x94\xd8\xb2\x24\x67\x5a\xcf\x2e\x49\x43\x89\x74\x82\x63\xb0\xbb\x8a\x0d\x43\x96\xe7\x79\x86\x2d\x7f\xa2\x10\xd9\x3b\x05\xfb\x4d\xb6\x63\x67\x14\xfc\x4c\x61\xcf\x9a\x7e\xd0\xda\x77\x2e\x65\x0d\x25\x34\x98\x50\x65\x00\x0e\x1b\x52\xb0\xf3\x81\xf2\x85\x30\x37\x1c\xb5\xdf\x53\xc8\x00\xd0\x39\x9f\x30\xb1\x77\x71\xcc\x06\x10\x35\xd9\x46\xc6\xba\xa8\xbd\xdf\x09\x05\x6d\xa0\x9c\x5d\x4c\x68\xed\x75\x3c\xff\x93\x78\x5b\x27\xa1\x40\xe4\x1b\x71\x23\x6e\xc8\x52\xa2\xbc\xf5\x96\xf5\x17\xa1\x60\x02\x63\xa7\x35\x91\x21\xf3\xcd\xf4\x58\x21\x5b\x32\x53\x73\x73\x37\xef\x6c\x17\x13\x85\x27\x6f\xe9\x2d\x3b\xc3\x6e\x7b\xd1\x75\x28\x51\x4b\xec\x52\xed\x03\xff\x35\x95\x2e\x77\xdf\x45\xc9\xbe\xd8\x6f\x4a\x4a\xb8\xf9\x5f\xfa\xbf\xfb\x8f\xed\x07\x6f\xe9\x89\xaa\xb1\x88\x2b\x15\x8e\x6d\xe8\x19\xcb\xd1\x34\xec\xc6\xea\x5b\x7e\x1f\x7c\xd7\xae\x88\x92\xc5\xae\xfc\x9d\x74\x8a\x2a\xcb\xe1\xa6\x5b\x5e\xd4\x68\x0c\xc7\x16\x35\x29\xe8\x7b\x90\x4f\x64\x09\x23\xc9\xc7\x05\x86\x61\xc8\x8e\xee\xfe\x8a\xfe\xb8\x70\x78\x9c\x3f\xf6\xcb\x97\x96\x40\x7c\xf0\x68\xde\xa2\x45\xa7\x29\x88\xaf\x2f\x72\xbb\xd5\xd4\x35\xf3\xbf\xf3\xae\xe2\xed\x03\xb6\x37\xe6\xde\xf7\x90\xa8\x69\x2d\x26\x02\x31\x36\x28\x47\x5c\x80\x84\x61\x78\xdd\x7e\x58\xfa\xb0\x1e\x4d\x79\xd0\xe1\xf3\x52\xf1\xe7\xf9\x97\x20\x63\xad\xe0\x39\xcf\xfa\x5e\xfe\xc8\x96\xa2\x7c\x4f\x09\x44\xd4\x81\xdb\x14\x8b\x17\xde\x14\xf0\x0c\xec\x0c\xb9\x04\xdf\xde\x90\xb7\xc4\xa4\xeb\xe2\x28\xf2\x4f\xbe\x7c\x55\xf2\x6e\x44\x16\x5b\xd2\x23\xc9\x52\xc1\x4c\xb8\xa0\xd3\xfd\x85\xd1\x1f\xd7\x5d\x3e\x5e\x81\x62\xc2\x90\x3e\x4e\xf3\x51\xf0\x48\xa7\x90\xf6\x2e\x21\x3b\x0a\x71\x61\xcf\x97\xbd\xe9\x4a\xd2\xc9\x1e\x50\x00\x6e\x70\x4b\x0a\x4a\x4e\x0e\x1b\x2e\x0e\x61\x35\xae\xce\xc1\xeb\x07\x48\xee\x67\xb1\xc7\xfd\x59\x5e\xd6\xbe\x69\x70\x14\xfc\x57\x51\x94\xec\x8a\x58\x8b\xdf\x8e\x41\x0c\xdb\xa8\xe0\xf8\x38\x96\x20\x72\x2d\x2e\x81\xa2\x8b\xa1\xb0\x5e\xa3\x9d\x08\x5e\x70\x01\xbc\xb9\x83\x37\xdf\x5f\x52\xac\x4d\xf5\x2c\xb1\xef\xb9\x5a\x3b\xcc\x86\x61\xa2\x62\xa7\x6d\x67\x6e\xf8\x03\x5b\x1e\x07\x44\xa1\xef\x81\x9c\x59\x21\xbf\x75\x18\xae\x73\xb7\x3e\x24\xb4\xd7\xc4\x7b\x6f\xbb\x86\x1e\x46\x3b\x1c\xe7\x78\x9a\xe4\xcc\x9d\xcf\x0b\x74\x56\x4c\x33\xe6\x7f\xc4\x54\x2b\xb8\x54\x37\x3b\x67\xfd\x07\x84\x7a\xf9\x65\xa9\x33\xf0\x5f\x2f\xd5\xe9\x32\x54\x61\x67\xd3\x83\x37\xa4\xe0\xee\xfe\xfe\x3e\x03\x28\x51\xef\x7c\x55\x7d\xe0\x86\x93\x82\x4d\x76\x12\xe5\x74\xf7\x77\x00\x00\x00\xff\xff\x51\xb6\x4a\xd7\x9c\x08\x00\x00")

func koreTemplatesEndpoint_discoverYamlBytes() ([]byte, error) {
	return bindataRead(
		_koreTemplatesEndpoint_discoverYaml,
		"kore/templates/endpoint_discover.yaml",
	)
}

func koreTemplatesEndpoint_discoverYaml() (*asset, error) {
	bytes, err := koreTemplatesEndpoint_discoverYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kore/templates/endpoint_discover.yaml", size: 2204, mode: os.FileMode(420), modTime: time.Unix(1585072441, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _koreTemplatesIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x92\xc1\x6e\xe2\x30\x10\x86\xef\x79\x8a\x5f\xdc\x1d\x40\xbb\xa7\xbc\xc1\x5e\x56\x7b\x42\xda\x53\x35\x24\xd3\xc6\xc2\xd8\x96\x3d\xa6\x95\xd2\xbc\x7b\x65\x42\x50\x54\x02\x45\xaa\x54\x72\x9a\x8c\x3d\x33\xdf\x3f\xfe\xbb\x4e\x41\x3f\xa3\xdc\x90\x49\x1c\x4b\xf2\xba\xd4\xf6\x25\x70\x8c\x25\x5b\xda\x1a\x6e\xd0\xf7\x85\x52\xaa\x20\xaf\x37\x1c\xa2\x76\xb6\x02\xbf\x09\xdb\x1c\xc6\xe5\x61\xbd\x65\xa1\x75\xb1\xd3\xb6\xa9\xf0\x67\xa8\x2d\xf6\x2c\xd4\x90\x50\x55\x00\x96\xf6\x5c\xa1\xeb\xa0\x6d\x6d\x52\xc3\x58\xec\x5c\xe0\x32\xa7\x17\x28\xd1\xf7\x8a\xbc\x2e\x80\x8c\xf2\xaa\xa5\x9d\x85\x21\x6b\x9d\x90\xe4\x91\x19\x08\x98\x24\xaa\xa2\xeb\x20\xee\x3f\xed\x0d\x4a\xbc\x43\xdb\x86\xad\xe0\xf7\x70\x31\xb7\x65\x7b\x94\x11\x3d\xd7\x99\x28\x24\xc3\x31\x07\x0a\xad\x8b\x72\x84\x9b\x1b\x9a\x0f\x33\xe6\xd0\x08\x68\x45\x7c\x75\x8c\x00\x4f\xd2\xc6\xf1\x47\x61\x4b\xf5\x8e\x6d\x33\x26\xf2\x17\x39\x1c\x74\xcd\x7f\xef\x91\x9f\xef\x72\xb8\x2c\xfe\xe7\xc2\x25\x9e\x77\x41\x46\xa4\x11\xa5\xc2\xf2\xa4\xf5\xca\x6b\x8a\x89\x4f\x91\xeb\xc0\xa7\x52\x31\x93\x0d\x9c\x84\xa8\x7b\x17\x31\x34\x3a\x2b\xbb\x67\xde\xe4\x19\x3e\x85\x13\xe0\xf4\x08\xf7\xe5\x75\x92\x99\x33\x60\x7a\x80\xff\xd2\x8f\xdb\xef\xac\x7f\xd6\x7b\xbf\x56\xab\xd5\xd7\x4e\x4b\xdf\x30\xda\x0d\xc5\x57\x7c\x76\x63\xda\xbc\xcd\x3e\x02\x00\x00\xff\xff\x72\xeb\x04\xb0\xe6\x04\x00\x00")

func koreTemplatesIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_koreTemplatesIngressYaml,
		"kore/templates/ingress.yaml",
	)
}

func koreTemplatesIngressYaml() (*asset, error) {
	bytes, err := koreTemplatesIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kore/templates/ingress.yaml", size: 1254, mode: os.FileMode(420), modTime: time.Unix(1597232225, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _koreTemplatesKoreYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x59\xdd\x8e\xe2\x38\x16\xbe\xe7\x29\xac\x48\x23\x75\x4b\x9b\xd0\xa5\xdd\x8b\x16\x77\x14\xa4\x98\x6c\x53\x80\x02\xf4\xec\x5c\x45\xc6\x39\x80\xbb\x1c\x3b\x65\x3b\xcc\x30\xd5\xf5\xee\x2b\xe7\x07\x12\x48\x52\xa4\xba\xb5\xd2\x4e\xee\x70\xec\xef\x7c\xe7\xd7\x27\x07\xdb\xb6\x7b\x38\xa6\x5f\x41\x2a\x2a\xf8\x00\x1d\xee\x7a\x4f\x94\x87\x03\xb4\x04\x79\xa0\x04\x7a\x11\x68\x1c\x62\x8d\x07\x3d\x84\x38\x8e\x60\x80\x5e\x5e\x10\xe5\x84\x25\x21\x20\xeb\x49\x48\x70\xcc\xb2\x85\x1c\xf4\xfa\x6a\xe3\x98\x2a\x90\x07\x90\x3d\x84\x5e\x5e\x6c\x44\xb7\xc8\xf9\x8a\x59\x02\xca\xc1\x31\x75\x80\x87\xb1\xa0\x5c\x3b\x21\x68\x20\x1a\xbd\xbe\xf6\x10\xc2\x9c\x0b\x8d\x35\x15\x5c\x19\x21\x08\x59\x7b\x60\x91\xa3\xf6\xfd\xbd\x10\x4f\xd6\x00\xc5\x12\x6c\xca\x95\xc6\x8c\x5d\xbf\xb7\xff\x00\xba\xdb\x6b\x6b\x80\xac\x4f\x56\x2e\x15\x78\x98\x41\x33\xbc\x01\x96\xa3\x76\x21\x7f\xb5\x2b\x03\x32\xfb\xbe\x23\xca\x43\xe0\x1a\xfd\xeb\xf5\xb5\xa7\x62\x20\x06\x5d\x1f\xe3\x0c\xbb\xac\xac\xca\x2c\xb8\x3a\xc6\x90\xb1\x89\x85\xd4\x29\x19\x3b\x27\xb3\xd7\x3a\x4e\xb9\x99\x37\x57\xe7\xcd\x62\x76\x10\x21\x8d\xe5\x0e\xf4\x22\xdd\x76\xf7\xe9\xd3\xe7\x4f\x3d\x84\x14\x30\x20\x5a\xc8\xee\xea\xf5\x2e\xbd\x8e\xe3\x58\xf5\x4f\xae\x1f\x43\xcc\xc4\x31\x02\xae\x7f\xc0\xfb\x85\xe9\xbb\x9a\x52\x42\xcc\x28\xc1\xea\xca\x1c\xc5\x8b\xcc\x24\x55\xe5\x23\xac\xc9\x7e\x5a\x72\x76\x57\xb6\x4a\x4b\xac\x61\x77\xcc\x4e\x67\xee\xf4\x05\x63\x94\xef\xd6\x71\x88\x35\xa4\xeb\xb2\xbc\x52\x08\x8a\xf0\x9f\xcb\x44\xee\x60\x80\xee\xce\x2b\x6b\x8e\x0f\x98\x32\xbc\x61\xf9\xba\x86\x28\x66\xa7\x53\x65\xb3\x9a\x87\x55\xa8\x77\x25\x9f\x3d\x79\xb8\xfd\xcc\x10\xff\x9c\x47\x5f\x4d\x8e\xa6\x51\x2b\x45\x04\x7a\x0f\x89\x72\xa8\xe8\xd7\xc6\x70\x04\x5a\x52\xa2\x82\x34\x96\xbf\xa3\xe7\x44\x68\x40\x27\xd4\x4b\x08\x45\xf6\x60\x14\xb7\x4c\x62\x58\x8d\x9b\x24\x36\xee\xb1\xb4\x4c\x20\xdb\x54\xc4\x4e\xc9\x0c\x43\x42\x44\xc2\xf5\xec\x6d\x43\x86\x11\xe5\xf9\x59\x22\xb8\xc6\x94\x83\x3c\x29\x69\xbf\xcb\x15\x34\xc2\xbb\xeb\x7a\x90\xae\xa2\xd7\xd7\xc1\xc5\xfa\x21\xcb\xc2\xb2\x59\xd2\xad\x8b\x84\xb1\x85\x60\x94\x1c\x07\xc8\xdb\xce\x84\x5e\x48\x50\x26\x29\x4f\x76\x29\xea\x49\xf1\x5c\xd5\x95\xe2\x39\x29\x56\xad\x20\xe7\xa7\xa6\x56\xef\x85\x4a\x0b\x4e\x99\x97\x79\x8a\xf5\x2b\xfd\x9a\x0e\x54\x2a\x72\x8b\x40\xe0\x26\x5d\x82\x3c\x64\xaa\xdb\x0b\xcd\xf2\x97\x6d\xca\xb5\x45\xe0\x15\x85\x0e\xbc\x62\x29\xb6\xd4\xa4\x7f\x3d\xb3\xd8\xbc\xef\xc0\xeb\x04\x77\x1b\x33\xe0\x87\x07\x29\xa2\xaa\xb7\x15\x10\x09\xda\x87\xed\xa0\x22\xf8\x96\xfa\x11\x1d\xd5\x33\xfb\x59\x60\x34\x8c\x7f\x16\x14\x8e\xe9\xe9\x0c\xa3\x07\xe0\xa0\xd4\x42\x8a\x0d\x94\xa1\x4c\x7c\x4f\x40\x57\xd1\x63\xac\xf7\x03\xd4\xdf\x03\x66\x7a\xff\x57\xf5\x55\x43\xd4\x17\xf5\xc6\x10\xaa\xfa\x5c\x33\x95\xfb\xdd\x78\xe1\xd7\xd5\x6a\xb1\x7c\x79\x41\xc0\x14\xe4\x3f\xcd\x2f\x1e\x56\xbc\x46\x39\xd5\x14\xb3\x31\x30\x7c\x5c\x02\x11\x3c\x54\x03\xf4\xcf\xb3\x44\x09\x38\xa4\x7f\x23\x7d\x80\x1f\x06\xed\x99\x93\x96\x31\xe5\xe0\x44\xef\x4d\xfa\xfc\x79\xac\x4f\x9d\xe1\x7a\xf5\x6b\xb0\xf0\xe7\xff\xf9\x3d\xf0\x1e\x87\x13\xb7\xa2\xd3\xc1\xc0\xd5\xd7\xd2\x66\xe4\x5b\x53\x7b\x93\x50\x16\xd6\x93\xba\x5f\x7b\xd3\x71\xe0\x8d\x6f\x20\x53\x83\x52\x4b\xa0\x80\xfe\x32\xf7\xdd\xc0\x9d\x0d\xef\xa7\x6e\xf0\x38\x9c\x0d\x27\xee\x38\x18\xbb\x8b\x65\x9d\xa8\xd2\x2d\x77\x01\xb2\xbe\x77\x03\x6f\x16\x8c\xa6\xeb\xe5\xca\xf5\xbb\x9d\x35\x04\x46\xae\xbf\xf2\x1e\xbc\xd1\x70\xe5\x06\xc6\x03\x73\xdf\x5b\xfd\x5e\x07\xd3\xcf\xd2\x59\xf5\x09\xee\x13\xec\xc4\x10\x75\x82\x0c\xbe\xb8\x37\xc0\xda\x4f\x70\x6c\x83\x1e\x2e\xbc\x60\xb1\xbe\x9f\x7a\xa3\x60\xed\x4f\xeb\xee\x2e\xcc\x43\xf4\x01\x9e\x1b\x5b\x70\x6b\x2a\x70\x78\x8f\x19\xe6\x04\xa4\xf5\xb1\xed\xbb\xe4\xe2\x02\x4b\x09\x5f\x56\x5f\x94\xf6\x1a\x46\x83\x2f\x70\xac\x29\x75\xb7\x14\xbb\x90\x2a\x22\x0e\x20\x21\xb4\x0b\x06\xea\x0a\xe6\x09\x8e\x5d\xfb\x8f\xc2\x2a\x79\x7e\xdf\x10\xc2\x27\x03\x24\x92\xdd\x74\x7f\x57\x9c\xb3\xee\xea\x9b\xe4\x36\xd7\x24\xff\xe7\x9e\x31\x75\x1a\xb3\x77\xba\x25\xf9\x51\xaf\x98\x0c\x74\x67\x2b\x93\x8e\xde\x7c\x16\x2c\xa6\xeb\x89\x37\xab\x2d\x32\x17\xc1\x90\x55\x55\x96\xec\x28\x57\xe8\x3b\xfa\x26\x28\x47\xd6\x3f\xac\x37\xab\x69\xe9\x5c\x40\x04\xdf\xd2\x9d\xc3\x04\xc1\x2c\xf8\xf6\x87\x0e\xe2\x64\xc3\x28\x79\x82\x86\x3b\x20\x65\x3c\x9d\x8f\x86\xd3\xe0\xdf\xbf\xad\x8a\x70\x6a\x28\x1d\x56\x33\xe1\x76\xc1\xd6\x3b\xee\x88\x2d\x60\x9d\x48\x08\x76\x58\x43\x43\x57\x9a\x92\x7f\x70\x87\xab\xb5\xef\x06\x93\xe1\xca\xad\x2f\xe5\x2f\x2f\x67\x5b\xb6\x49\x78\x0f\x4b\x13\x7a\x41\x3a\x24\xe1\x04\x02\x6a\x3e\xdf\xe8\x96\x82\x6c\x21\xec\xcd\x96\xab\xe1\x6c\xe4\x06\xde\xd8\x84\xc9\x83\xd7\x70\x8b\x5c\x18\xbb\x45\xd2\x9b\xc4\x0b\xf9\x5f\x5d\xff\x7e\xbe\xac\xbd\xe8\x2f\xc5\x1d\x40\x6e\x44\x9a\x2f\x75\x37\x59\x7e\x8b\x2e\xfc\xf9\x83\x37\xf5\x66\x93\x5b\x10\x6b\xfa\xf9\x3a\xe8\x13\x66\xb0\x98\xfb\xab\x5b\x80\xaf\x5a\xfa\x16\xc6\x8f\xee\xca\xf7\x46\x8d\x71\xd2\xfa\x5d\x54\x07\x9b\xe3\xdd\xcc\xf5\xe2\xb3\xa8\x85\xe9\x7a\xe9\xfa\xc1\xf8\x3e\x98\xce\x27\x93\x1b\x2d\x9c\xfb\x2c\x08\x37\x35\x41\xd1\xda\x99\xd6\xd0\x58\x4d\x97\x69\x63\xd1\xda\x43\x68\xa6\xfa\xd9\x25\xe8\x10\x90\xba\x01\xe6\xad\x4e\xa4\x84\xf2\x04\xc7\xf6\x60\x3e\x08\x96\x44\xf0\x28\x12\x5e\xfe\x06\x2f\xa4\x11\x5c\x3a\x6d\x1a\xff\x39\x67\xc7\x01\x32\x0d\x59\xe9\x45\x64\x4e\x2f\xb2\x3e\xff\xdc\x0d\xf5\xba\x5b\xab\x10\xab\x99\x7a\xaf\xdc\xf2\xd1\x1a\x75\xb3\x4f\x8a\x8b\xf6\xaa\x98\x5c\x58\x21\x1c\x2c\x64\xd7\x10\x32\xc5\xa2\x41\xf0\x4e\xf4\x95\x24\xfd\x1d\xd5\xfb\x64\xe3\x10\x11\xf5\x71\x1c\x1f\x28\xee\x57\xce\x14\x40\x3b\x41\x30\xd9\x37\x61\x49\x21\x74\xdf\x49\x77\xf4\x77\xc2\x4e\x1b\xf2\x66\x6d\x32\xd7\x5d\xcd\x78\x4a\x96\xcf\x8c\x52\x6e\x1c\xb2\x95\xd3\x38\xa9\xb0\x02\xc1\xce\xf9\xcd\x59\xc2\xad\x9e\xab\xf3\xdb\x9b\xb2\x43\xd8\xe2\x84\xe9\x2b\xf4\x12\x91\x0f\xb1\xa4\x5c\x6f\x91\xf5\x8b\xb2\x7f\x51\x16\xfa\x50\xdf\xa2\x7c\x44\x16\x8e\xa9\xad\x99\xb2\x3e\x56\xc9\x97\xbf\x05\x3b\xb9\xbe\xd6\xf1\xe9\x64\xc8\x78\xaa\xa4\x54\xdc\x25\x0a\x8a\x91\xec\x98\xca\x74\xea\x7b\xec\xb5\x47\x47\x6c\xd8\x29\x0d\x5c\x7f\x4d\x7d\x3d\x62\x98\x56\x7a\x44\x62\x16\xde\x1e\x0e\x56\x71\x4b\x81\xf4\xd6\xdf\x26\xf9\xf8\xb1\xeb\xfc\x3c\x9f\x45\x76\x9d\x9d\xa7\x74\x32\xf9\x23\x96\x28\x0d\xd2\x17\x0c\xee\x29\x0f\x29\xdf\x55\x78\xca\x0d\x26\x69\xbb\x24\x24\xfd\x2b\x9d\xe7\x3a\x4f\x9f\xd3\xb1\xea\xe1\x6e\x03\x1a\xdf\xfd\x8f\x18\x4b\xc1\x20\x6f\xcd\xaf\x78\x9f\x04\x93\x6c\xed\x24\x04\xc7\x74\x22\x45\x12\xb7\xa8\xd1\x53\xc9\xe6\x1b\x10\x53\x92\x6d\x54\xeb\x91\x2e\x5a\x99\x25\x15\xe3\x7c\xa8\xee\xf8\xc0\x00\x2b\x70\x66\xc5\xb2\x89\x84\xde\x8d\xe9\xd1\x18\x31\x8b\xba\x58\xed\xe8\x86\x73\x9c\xbe\xf7\x6f\x17\x4c\x08\x28\xf5\x28\xc2\xa2\x2e\xda\xc8\x07\x1c\xfe\x26\xa9\x86\x39\x27\x90\xfe\x33\xa3\x44\x22\x49\xb1\x41\xc2\x73\x02\xea\x7c\xf9\x29\x2d\x64\x3a\xf6\xbe\x9b\xd0\x5e\x29\x55\xfe\x1b\x00\x00\xff\xff\xab\x8d\x59\xee\x62\x1c\x00\x00")

func koreTemplatesKoreYmlBytes() ([]byte, error) {
	return bindataRead(
		_koreTemplatesKoreYml,
		"kore/templates/kore.yml",
	)
}

func koreTemplatesKoreYml() (*asset, error) {
	bytes, err := koreTemplatesKoreYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kore/templates/kore.yml", size: 7266, mode: os.FileMode(420), modTime: time.Unix(1597683638, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _koreTemplatesMysqlYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4d\x6f\xd3\x40\x10\xbd\xfb\x57\x8c\x72\x77\x42\x55\x84\x90\x6f\xa1\x05\x09\xa9\x2d\xa1\xa1\x45\x9c\xd0\x64\x3d\x49\x57\xdd\xaf\xee\x8e\x2d\x42\xf1\x7f\x47\xeb\x4d\x5c\xbb\x0d\xa2\x2e\xec\x29\x79\x9e\x79\xef\xf9\xed\x78\xd0\xc9\x6b\xf2\x41\x5a\x53\x40\x7d\x94\xdd\x4a\x53\x16\xb0\x24\x5f\x4b\x41\x99\x26\xc6\x12\x19\x8b\x0c\xc0\xa0\xa6\x02\xee\xef\x41\x1a\xa1\xaa\x92\x60\x72\x6b\x3d\x4d\x23\x3c\x81\x29\x34\x4d\xae\xb7\xe1\x4e\x65\x00\x0a\x57\xa4\x42\xec\x79\x7e\xd7\x93\x8a\x44\x12\x6b\x7e\x81\x34\x25\x19\x86\xd7\x4d\x93\x05\x47\x22\x32\xf3\xd6\x51\x01\x27\xaa\x0a\x4c\xfe\xe3\x22\x03\x70\xd6\x73\x2b\x9a\xef\x44\xf7\x76\xd2\xa3\x02\x8e\x8f\x5f\xbd\x69\xff\x32\xfa\x0d\xf1\xa2\x0f\x06\x0a\x31\x82\xf9\x7a\x2d\x8d\xe4\x6d\x64\x96\x64\xb8\x25\x0e\xa4\x48\xb0\xf5\xe3\x5e\x28\xcf\xf3\xec\x60\xb6\x8b\x88\x04\x26\xc3\xd7\x56\x55\x9a\x4e\x14\x4a\xfd\x92\xa4\xf3\x52\x86\xdb\x5e\xdc\x63\x23\x44\x21\x28\x84\x73\x5b\xd2\xee\xae\x72\xb8\x24\x2c\xbf\x7a\xc9\xf4\xc9\x08\xca\x00\x3c\x05\x5b\x79\xb1\x2f\xf0\x74\x57\x51\xe0\xdd\x3f\x80\xc0\xd6\xe3\x26\x79\x9d\x5e\xa3\xaa\x28\x4c\x5b\x6b\x53\x57\x8b\x69\x90\x3f\x09\x9a\x26\x83\xf6\x55\xd6\x60\xe8\x50\x51\xa2\x38\x51\x18\x02\x4c\x26\xa9\xbe\x0f\x5e\xec\xc3\xf8\x4b\xef\x5e\x88\x4c\x19\x7f\x3f\x8e\x1f\x9d\x0b\xb3\xee\x0e\x4e\xc9\x29\xbb\xd5\x64\xf8\x1f\x47\x7c\x6c\xe6\x9e\x9c\x92\x02\x43\x01\x47\x4f\x26\x4b\x23\x8b\x9b\xb3\xde\xb7\x33\xc6\x50\x60\x8f\x4c\x9b\x6d\xea\x4c\x5f\xc7\xa5\x55\x4a\x9a\xcd\x95\x2b\x91\x29\x5d\x60\x1f\xd9\x8b\x68\xfc\xb1\xac\x7c\xbc\xc6\xa3\x07\xe4\xca\x60\x8d\x52\xe1\x4a\xed\x70\x26\xed\x54\xd7\xd5\x4f\x2d\x1e\x35\xb0\x3d\xc6\xf8\x6e\x92\xd2\xc2\xf9\x5f\x9b\xe2\x6d\x3b\x0d\x00\xfb\xd8\xe3\x11\xd6\x30\x4a\x43\xbe\xb3\xd9\x2d\x0a\xf4\x12\xcb\x55\x67\x46\xea\xc3\x43\xdd\xe2\xd0\x34\xc5\x93\x27\x75\x1a\x33\xd8\xc9\xc6\x43\xa6\xfe\xe0\xad\x7e\x88\x24\xea\x05\x12\x9e\xf8\x92\xd6\x7d\xf8\x25\x79\x91\xa9\x87\xcc\x89\xe0\xfc\xdb\xf2\xf3\xd9\xf7\xd3\xf9\x97\xf9\xbb\xf9\xf2\xfd\x40\xa3\x8e\x7e\x0b\x88\xb4\x1d\xde\xad\xcc\xc7\x3c\xcf\x37\x32\x48\x76\x31\xdc\xb3\xad\x6c\xbb\xe3\xce\x6d\x65\x0e\x2b\xc5\x21\x1a\x90\xe9\x58\xba\x40\xbe\x29\x60\x56\xa3\x9f\x29\xb9\x9a\xf5\x25\x13\x61\x8f\xeb\x0f\x4c\xee\xd0\x9a\x1d\xc6\x2e\x22\x74\x31\x66\xd9\xfe\x0e\x00\x00\xff\xff\xab\xe1\x6f\xdd\x2d\x07\x00\x00")

func koreTemplatesMysqlYamlBytes() ([]byte, error) {
	return bindataRead(
		_koreTemplatesMysqlYaml,
		"kore/templates/mysql.yaml",
	)
}

func koreTemplatesMysqlYaml() (*asset, error) {
	bytes, err := koreTemplatesMysqlYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kore/templates/mysql.yaml", size: 1837, mode: os.FileMode(420), modTime: time.Unix(1596739602, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _koreTemplatesPortalYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x4d\x8f\xdb\x36\x13\xbe\xfb\x57\x10\x02\x02\x24\xc0\x2b\x6b\x17\x79\xd1\xa6\xba\x79\xd7\x4e\x22\xc4\xb1\x0d\x7f\xa4\xed\x49\xe0\x4a\x63\x9b\x5d\x8a\x64\x49\x4a\xa9\xe1\xf8\xbf\x17\x14\x25\xaf\xbe\xd6\x59\x6d\x37\x87\x02\xd5\xcd\x63\x72\xe6\x99\x67\xe6\xa1\xa8\x71\x5d\x77\x80\x05\xf9\x02\x52\x11\xce\x7c\x94\x5d\x0f\xee\x09\x8b\x7d\xb4\x02\x99\x91\x08\x06\x09\x68\x1c\x63\x8d\xfd\x01\x42\x0c\x27\xe0\xa3\xe3\x11\x11\x16\xd1\x34\x06\xe4\xdc\x73\x09\x43\x63\x76\xd0\x10\x9d\x4e\xae\xe0\x52\x63\x3a\x40\xe8\x78\x74\x11\xd9\xa2\xe1\x17\x4c\x53\x50\xc3\x94\x0c\x81\xc5\x82\x13\xa6\x87\x31\x68\x88\xf4\xe9\x34\x40\x08\x33\xc6\x35\xd6\x84\x33\x65\xfc\x23\xe4\xec\x81\x26\x43\xb5\xf7\xf6\x9c\xdf\x3b\x3e\x12\x12\x5c\xc2\x94\xc6\x94\xb6\xff\x77\xbf\x02\xd9\xed\xb5\xe3\x23\xe7\xca\x29\x62\x02\x8b\x51\xee\x9a\xe2\x3b\xa0\x85\xd7\x27\xe3\x6e\x2d\xb1\x5e\xcc\xa2\x6f\x88\xb0\x18\x98\x46\xff\x3f\x9d\x06\x4a\x40\x64\x5c\xeb\x83\xb0\x8e\x2b\x79\x2a\x4b\xdc\xfa\x20\xc0\x22\x31\xbe\x73\x20\x6e\x1f\x02\xed\xbe\xa6\x73\x63\xb3\x5e\x11\xd2\x58\xee\x40\x2f\xf2\x55\x6f\xaf\xae\xae\x06\x08\x29\xa0\x10\x69\x2e\x7b\xa6\x3d\x68\x76\x01\x16\x42\x79\xe7\x56\x18\x83\xa0\xfc\x90\x00\xd3\xcf\xed\x86\xb2\x18\x7d\xf9\x95\x20\x28\x89\xb0\x6a\xd2\x50\xda\x2d\x15\xf5\xac\x13\xac\xa3\xfd\xb4\x52\xfd\x5e\x48\x95\x96\x58\xc3\xee\x60\xb7\xda\xfa\x2e\x39\xa5\x84\xed\x36\x22\xc6\x1a\x72\xbb\xac\x5a\xca\x28\x09\xfe\x6b\x95\xca\x1d\xf8\xe8\xfa\xc1\xb2\x61\x38\xc3\x84\xe2\x3b\x5a\xd8\x35\x24\x82\x9e\x77\x55\xf9\x34\x0f\xad\xe1\xee\x85\xdc\x3e\x45\xf7\xbd\x58\xb7\xbf\x2b\x9a\xad\xac\x88\x79\x22\xce\x34\x26\x0c\xe4\x19\x68\xcf\xce\x36\x0f\x49\xf0\xae\xa5\x9d\xdc\x88\x4e\x27\xbf\x6e\xce\x6c\x5f\x96\x8d\x7f\xde\xbe\x48\x29\x5d\x70\x4a\xa2\x83\x8f\x82\xed\x8c\xeb\x85\x04\x65\xda\xb4\x5c\x75\x96\x5e\x1d\xe6\x5e\x6b\x71\x36\x56\xf2\xa9\x69\xa9\x7c\xda\x27\xd9\x9e\xab\x5c\x76\x55\x3c\x08\x95\xd6\x66\x4e\xdd\xab\x6b\x67\x95\x7d\x80\x65\x6d\xa8\xa3\xcd\xfa\x63\xb8\x98\x6e\x3e\x04\xb3\x55\x65\x7b\x66\xdc\xd7\x22\x61\x41\x86\x38\xd5\xfb\x50\xd0\x74\x47\x98\x42\xdf\xd0\x1f\x9c\x30\xe4\xfc\xcf\xa9\x06\x69\x67\x73\x97\x12\x5a\xc3\x51\x86\xbe\xd9\x04\xd3\x71\x18\x8c\x2f\x86\xed\x72\xd0\x91\x5b\xe9\x73\x39\x19\x07\xab\x70\xb3\x9c\xb6\x9d\x4a\x88\x89\xf2\x3d\xef\x52\x0f\xd9\x35\x3f\xbd\xfd\xf9\x97\x96\xe7\x4f\xf3\xe5\x24\xbc\x19\xad\x26\x0d\xef\x45\xc2\x98\xc5\xe8\x35\xfc\x59\xa3\xab\x7a\x52\x3b\x53\x8e\xe3\x1b\x4c\x31\x8b\x40\x3a\x6f\x6a\xeb\xba\xde\x5c\x35\xf0\xef\x25\x4f\xfc\x8a\xd1\xc8\x30\x92\xa0\x3f\xc1\x61\x09\xdb\xfa\x3f\x4f\xd1\x74\x4c\x54\xc4\x33\x90\x10\xbb\x65\x6c\xd5\x70\x72\x0f\x87\x5e\x72\x2b\xaa\x42\x15\xa0\x36\xfe\x66\x45\xcf\x09\xa7\x92\x7e\xb7\x6d\x6b\x05\x18\x2d\x82\xee\xea\x1a\xa8\xdb\x1a\xab\x9a\xaa\x21\x30\x73\x30\x1a\x77\x46\x92\xea\x78\x2c\x11\x9a\x9f\xe6\x57\x1e\xea\x3b\x4d\x81\x05\x31\x95\x04\xe9\x37\xe4\x50\xbc\x2c\x3d\x2c\x88\x97\x5d\x63\x2a\xf6\xf8\xfa\x82\x10\xd4\x9e\x7f\x0d\x85\xe4\x9a\x9b\x63\x5f\x3d\x9a\xe3\x26\x08\x57\x1f\xe7\xbf\x86\x8b\xe5\x7c\x3d\x5f\xff\xbe\x98\x74\x08\xd3\x69\xdc\x09\x5a\xae\x9d\x4b\x6a\x69\x63\x8b\x89\x32\x4c\x85\x98\x91\xc4\xde\x97\x2e\xc1\x1b\x07\xab\xd1\xcd\x74\x12\x8e\x66\xc1\xe7\xd1\x3a\x98\x77\x1d\x1d\x0d\x84\x9d\x01\x2e\x82\x6c\xd5\x7d\xb1\xb9\x99\x06\xb7\xff\xc9\xaf\xde\x94\xcf\x50\x60\x2d\xe9\x67\x49\x70\x3d\xff\x34\x99\xfd\x68\x9a\xb0\x20\x5d\xac\x58\x10\xe3\xcf\xc1\xac\x01\xa3\xdd\xd5\x5b\xc0\x3a\x95\x10\xee\xb0\xbe\xa0\xb7\xf7\x93\xd1\x7a\xb3\x9c\x84\x1f\x46\xeb\xc7\xa4\x76\x7e\xd3\x5d\x70\xde\x47\x71\xed\xf3\xa9\x05\x6d\x36\x1f\x4f\xc2\xc9\x6f\xeb\xe5\x28\xbc\x1d\x85\xb7\x93\xe5\xba\x03\x9b\x67\x19\x56\x9e\xa6\xca\x8b\xf0\x30\x02\xa9\x2f\xc1\x00\x96\xd5\xab\xe4\x16\x35\x6a\x15\xe8\xfb\xe5\x21\xf1\xc3\x1d\x27\xe3\x34\x4d\xe0\x33\x4f\x59\xf5\x3a\x64\xcf\xe4\x8a\x2a\x2b\x57\x2d\x27\x86\xcc\x41\x6e\x47\xe2\x26\x4e\x05\x4a\x62\x9c\x2e\xb0\xde\xfb\xc8\xdb\x71\x4f\xc9\xc8\xdb\x11\xbd\x4f\xef\x86\x11\x4f\x3c\x2c\x44\x46\xb0\x57\xdb\xf3\x22\xf4\x6b\x5a\x95\xa4\x04\x1c\xcf\x19\x3d\xf8\x48\xcb\xf4\x31\x74\x95\x5a\x3c\x8e\xc5\x32\x75\x26\xa9\x0f\x45\x9d\x04\xe5\xb7\x3f\x13\xbf\x02\x4a\xf4\x61\xab\xfc\x08\x19\x13\x99\x7f\xe4\x1c\x06\x8f\x20\x7f\x2a\x87\x5d\x0c\x5a\x6a\xaa\x18\xad\x65\x56\x76\x59\x0c\x5b\x9c\x52\xdd\xf2\xfe\xb0\x0c\xbd\x16\x92\x30\xbd\x45\xce\x2b\xe5\xbe\x52\x0e\x7a\xdd\xdd\x99\x6f\x90\x83\x05\x71\x35\x55\xce\x9b\xfa\xc1\x46\x34\x24\xaa\xde\xe5\xae\x3d\x52\x9a\xca\xa9\xd2\x58\xff\xaf\x60\xe5\x74\x6a\x7f\xd3\xfe\xc3\xc9\x46\x7e\xf5\xec\x3d\x57\xb0\xbb\x9e\x37\x56\xb8\xa5\xa9\xd2\x20\x83\x45\xdf\x19\x42\x09\xb5\x1c\x21\x9c\xef\xcb\xd5\x89\x41\x61\x54\xa0\x0c\x3d\xa3\xed\x96\x30\xa2\x0f\x26\x2a\x01\xa6\xf3\xa0\x7d\xa7\x09\x36\xee\x8f\x1a\x26\x34\x0b\xf0\xfc\x59\xc2\xf5\xcb\xcc\x0c\x4a\x40\xff\xba\x91\xc1\x43\x7f\xa0\xa7\x4e\x0c\x9e\xde\xc7\xef\xd0\x8b\x4d\x0c\xea\x38\x8b\x81\x81\xfd\x04\xac\xdc\x96\x72\x43\x75\x44\xf0\x77\x00\x00\x00\xff\xff\x04\xf6\xb0\x69\xd3\x14\x00\x00")

func koreTemplatesPortalYmlBytes() ([]byte, error) {
	return bindataRead(
		_koreTemplatesPortalYml,
		"kore/templates/portal.yml",
	)
}

func koreTemplatesPortalYml() (*asset, error) {
	bytes, err := koreTemplatesPortalYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kore/templates/portal.yml", size: 5331, mode: os.FileMode(420), modTime: time.Unix(1597232225, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _koreTemplatesSecretYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\xef\x6f\xdb\x36\x10\xfd\xae\xbf\xe2\x40\x24\x80\x0d\x54\xac\x93\x74\x19\x20\xa0\xd8\x3c\xdb\xc0\x8c\x24\x76\x26\xb9\x19\xf6\x49\x60\xa8\x8b\xcd\x99\xa2\x58\x92\x72\x61\x38\xfe\xdf\x07\x4a\x76\xfd\x4b\x1e\xb0\xae\x28\xf2\x4d\x12\xef\xde\xbb\x7b\xef\x74\x5c\xad\x42\x10\x2f\x40\x9f\x98\x2c\xd1\x52\xce\xe8\x14\x15\x1a\xe6\x10\xd6\xeb\x20\x0c\xc3\x80\x69\xf1\x84\xc6\x8a\x42\x45\xb0\xb8\x0a\xe6\x42\x65\x11\x24\xc8\x0d\xba\x20\x47\xc7\x32\xe6\x58\x14\x00\x28\x96\x63\x04\xab\xd5\x3e\x96\xad\xc2\x46\x2c\xaf\xd0\x00\x98\x52\x85\x63\x4e\x14\xca\xfa\x14\x00\x32\x43\x99\x53\x3b\x7b\x3f\x2b\x8a\x39\x89\x40\x1b\x0c\x85\xb2\x8e\x49\x79\x7a\x1e\x7e\x41\x31\x9d\x39\x12\x01\xe9\x90\x00\x40\xb2\x67\x94\x36\x0a\x56\x2b\x10\x8a\xcb\x32\x43\x20\xf3\xc2\x20\xad\x0f\x08\x50\x78\x05\xa1\x32\x54\x0e\x3e\xac\xd7\x81\x5b\x6a\x8c\x60\xac\xd9\xe7\x12\x83\x6d\xd9\x5e\x80\x2f\xc2\xcd\x60\x8a\xaa\xd7\x05\x32\x2f\x9f\xd1\x28\x74\x68\x09\xdc\xdc\xfe\xd4\xa9\x0b\xe7\x8c\x6a\xcc\xeb\xf6\x7a\x68\x1c\xbc\xc2\xf3\xed\x07\x54\x7c\x7b\x1c\xce\x71\xb9\x0b\xb9\xc3\xe5\x51\x84\xa7\x41\x95\xf9\x97\xbd\xc7\x60\x23\x3f\x53\xd9\x57\xd9\x98\x16\xd4\x49\x4b\x51\xb1\x67\x89\x19\xb4\x54\xe1\x4e\x0e\x77\xc2\xb6\xb7\x90\xe2\x05\x7c\x64\x4b\x16\xc5\xbc\xd4\x40\x16\x57\x04\x48\xed\x13\x01\x1a\xa3\x44\x66\x91\xfa\x14\xab\x19\x47\x68\x69\x23\x94\x7b\x01\x72\x69\x2f\x2d\x81\xd6\xa1\x84\xde\x4d\x02\xb4\x0d\x24\x64\x5a\x84\x4e\x5a\xd2\xde\x50\xc1\x05\x67\x10\x7d\xdc\x0a\x66\x17\x3c\xe4\xcc\x85\x9c\xed\x04\xf3\x41\x99\xf2\x41\x5b\x12\x0f\xea\x91\x2c\x9a\x05\x1a\x7a\x69\xa9\x5d\x70\xca\x65\x69\x1d\x1a\x2a\x0b\xce\x64\x63\x95\x1b\xb0\x3a\x6d\xc3\x9a\x88\xa9\xc2\xac\xb2\x81\x10\x68\x49\x61\x1d\x90\xab\xeb\x9f\x69\x87\x76\xe8\x15\x69\x6f\x3f\x55\xa8\xb3\xc2\x3a\x72\xcc\x4f\x7c\x79\x6d\x5f\x6e\xd5\xcc\xb7\x4e\x7a\xa3\x64\xb0\x5e\x6f\x25\xfb\x8f\x13\xff\xce\x3f\x97\x7a\x6a\x58\x86\x3f\x68\xfa\x39\xa3\x1c\x8d\xab\xba\xb9\xe0\xac\x69\xb6\x37\x8e\xed\xc2\x36\x1f\xce\x87\xce\x71\x79\x10\x79\xfc\x37\x9c\xf9\x17\xbe\xaf\x05\x22\xd3\xff\x57\x24\xeb\x8c\x50\xd3\xfe\xde\xa2\xd8\xdb\x94\x22\xd3\x94\x4b\x81\xca\xa5\x22\xab\xdb\xbf\x1b\xc7\x83\x74\xd8\x7f\x4c\x7b\xf7\xc3\xc1\x68\x92\x0e\xfb\x07\xfb\xb0\x21\x63\xaf\xfd\xd3\xf4\xa4\x37\x7e\x1c\x24\xe7\x20\x2c\x2f\x34\x5a\x78\x85\xbf\x0b\xa1\x80\xbc\x23\x3b\xc4\xe6\x2a\xeb\x95\x71\x86\x6a\xd0\x8b\x07\x93\xb3\x54\x7b\x99\x07\x15\x37\x90\xd5\x96\xa7\xa5\x91\x47\x4c\xc9\x20\x7e\x1a\xc4\xe9\xa7\xf8\xfe\x84\xe6\x38\xa7\x59\x95\x4f\xc9\x20\x4e\x7b\xf7\xdd\xe1\xc3\xa9\x26\xa5\x45\x93\x72\xc9\x44\x7e\xac\xc8\xf7\x1d\xaa\x7c\x69\x3f\xcb\xb7\x75\x8f\x9d\x0e\x69\x75\x9b\x19\xa6\xb2\xae\xd4\x33\x36\x2a\x73\xb8\xde\xdc\x62\x5e\xc2\x24\xed\xff\x56\xbb\x60\x8a\xc2\x45\x5e\x48\x58\xaf\x7f\x75\x5c\xb7\xce\x74\x7e\xf1\xb5\xf3\xe8\xe6\xa6\x73\xdb\x7e\xef\xcf\x7e\xd1\xcc\x58\x9c\x88\x1c\x3f\x3a\x53\xfa\x75\xf5\xf0\x57\xf2\xc7\x7d\x1a\x8f\xc7\x93\xf4\xb1\x9b\x24\x7f\x8e\xe3\xcd\xf8\x9f\x98\xfa\x0d\xa6\x6c\xd7\xf7\x5b\xd6\xbe\x9a\xd4\x6e\xff\x61\x38\xaa\x04\xa8\x9a\x2f\xcc\xc1\xd5\xcd\xb2\x5c\xa8\x54\x33\x6b\xa1\x75\xe0\xd0\xcd\x75\x7b\x6f\xdc\x6b\x90\xc9\xf8\x6e\x30\x3a\x8f\xe2\x8a\x39\xaa\x7f\x85\xf9\xfd\xa1\xdb\x6b\xca\x9f\xe5\x8c\x37\x27\xfe\x13\x00\x00\xff\xff\xa3\x35\xf9\x9a\x0e\x0a\x00\x00")

func koreTemplatesSecretYamlBytes() ([]byte, error) {
	return bindataRead(
		_koreTemplatesSecretYaml,
		"kore/templates/secret.yaml",
	)
}

func koreTemplatesSecretYaml() (*asset, error) {
	bytes, err := koreTemplatesSecretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kore/templates/secret.yaml", size: 2574, mode: os.FileMode(420), modTime: time.Unix(1597232225, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _koreValuesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xc1\x8e\xdb\x38\x0c\xbd\xeb\x2b\x88\xec\x39\x89\xb3\x8b\x5d\xec\xe8\x3a\x05\x8a\x5e\xda\x39\xf4\x56\x14\x06\x2d\xd1\x0e\x3b\xb2\xa4\x91\xe8\x0c\xd2\xa2\xff\x5e\xc8\x76\x1c\x07\x98\x01\xda\xa2\x37\xeb\x91\x8f\x14\xf9\x9e\xbc\xdd\x6e\xd5\x5f\xf0\x86\x5a\x1c\x9c\xc0\x09\xdd\x40\x19\xda\x90\xe0\x31\x24\xda\x29\x8f\x3d\x7d\x38\x51\x4a\x6c\x49\xc3\x66\xa3\x0c\x6a\x05\xd0\x91\xa7\x84\x42\x1a\x24\x0d\xa4\x00\x32\x99\x44\xf2\x1e\x7b\xd2\x23\x73\x6b\x50\x25\xb2\x9c\x4b\xf6\x89\x52\xe6\xe0\x35\xfc\xbb\xab\x54\x7f\xce\x4f\xae\xa0\xdc\x63\x47\x1a\x7a\x4c\x8c\xb6\x59\xa7\x35\x1c\x3c\x1b\x05\x10\x4f\xa6\x64\x02\x98\x44\xeb\x6e\x00\x59\x42\xc2\x8e\xee\x1d\xe6\x3c\xde\x6b\x04\xf9\x2b\x69\x38\x54\x6f\x59\xb1\x8d\x85\x69\x1c\x93\x97\x9a\xed\x9c\x33\x9f\xa7\xdb\xce\x58\xa6\x74\xa2\x54\x0f\xc9\xcd\xc0\x90\x29\xd5\xc6\x21\xf7\x79\xea\xbe\x85\x98\xa8\xa5\x94\xc8\xd6\x25\x58\x96\x32\x07\xa8\x47\x76\xf3\xf7\x0a\x5e\x65\x5d\x5a\x9a\x10\x69\xa9\xb7\xa6\xc5\x14\x5a\x76\x17\x66\x68\x5b\xc7\x9e\x6a\x34\x86\x72\x56\x18\xb9\x70\x5a\x42\x19\x12\xd5\x1d\x0a\x65\x0d\x9f\x3e\x4f\xeb\x6a\x42\x26\x0d\x2d\xba\x4c\x57\xa0\xb6\xcd\x15\x23\x6f\x63\x60\x2f\x53\xe3\x71\xc6\xa3\x48\xd4\xfb\xbd\x0b\x06\xdd\x31\x64\xd1\x87\xaa\xfa\xbf\x1a\xe3\x96\x84\x8c\x5c\xd9\x45\xc9\x9a\x7d\x16\xf4\x86\x6a\xb6\xe4\x85\x5b\xa6\x34\x2f\x6a\x54\x30\x6b\xf8\xf6\xbd\x1c\x7c\x97\x28\xcf\x13\x92\xc7\xc6\x91\xbd\x56\x02\x28\xad\xfc\xe8\x8f\x97\x3a\x8b\xcb\xb7\xaa\x00\xa0\xf7\x41\x50\x38\xf8\x4b\x8b\x18\x92\x14\x7d\x27\xd2\xd4\xa3\x9e\xd6\xc7\xbe\x5b\x0f\x3d\x46\x7a\x92\xc4\x26\x2f\xae\x99\xcf\xf5\x54\xe6\xae\xba\x2b\x55\x16\xfa\x15\x3e\xa8\xe9\xb6\x0f\x23\xb0\x78\x84\x0d\x7d\x3c\x47\xd2\x70\xef\x86\x2c\x94\xde\x3d\x5c\x4d\xfc\x34\xe0\x79\xc7\x61\x8f\x31\x9e\x18\xf7\xe3\x0b\xc0\xc8\x93\xb5\xd6\xd6\x76\x45\x40\x51\x00\x38\xc8\xb1\x8e\x6e\xe8\xd8\x2f\xae\x40\xdb\xb3\x97\xf0\x48\x7e\x06\xbe\x3c\xcb\xc5\x16\x91\x3c\xdb\xf9\xd0\x60\x66\x53\x0a\xdc\xd6\xa9\x4d\xf0\x2d\x77\xf3\xb2\x12\x45\xc7\x06\xb3\x86\xbf\xd5\xb8\xdf\x57\x95\x59\xbf\xdd\xcd\x46\x0d\xaf\x3a\xee\x67\xcc\xf4\x4f\x55\xbd\xec\xa5\xdf\xf1\xc7\x52\xec\x17\xec\x31\x73\xfe\x80\x80\x03\xbf\xa8\xdc\xed\x62\xf3\x31\x3c\x17\x0f\x4a\x90\x73\x79\xe0\xcb\x44\x96\xf3\xe8\x42\xf4\xdc\x5f\xae\x39\xc5\x1e\x87\x86\x8c\xb8\x9b\x3f\xe3\x61\x77\xf8\x4f\xfd\x08\x00\x00\xff\xff\x4d\xfb\x2e\xb7\x8c\x05\x00\x00")

func koreValuesYamlBytes() ([]byte, error) {
	return bindataRead(
		_koreValuesYaml,
		"kore/values.yaml",
	)
}

func koreValuesYaml() (*asset, error) {
	bytes, err := koreValuesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kore/values.yaml", size: 1420, mode: os.FileMode(420), modTime: time.Unix(1597684970, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"kore/.helmignore": koreHelmignore,
	"kore/Chart.yaml":  koreChartYaml,
	"kore/scripts/loadbalancer_endpoint_detect.sh": koreScriptsLoadbalancer_endpoint_detectSh,
	"kore/templates/NOTES.txt":                     koreTemplatesNotesTxt,
	"kore/templates/_helpers.tpl":                  koreTemplates_helpersTpl,
	"kore/templates/endpoint_discover.yaml":        koreTemplatesEndpoint_discoverYaml,
	"kore/templates/ingress.yaml":                  koreTemplatesIngressYaml,
	"kore/templates/kore.yml":                      koreTemplatesKoreYml,
	"kore/templates/mysql.yaml":                    koreTemplatesMysqlYaml,
	"kore/templates/portal.yml":                    koreTemplatesPortalYml,
	"kore/templates/secret.yaml":                   koreTemplatesSecretYaml,
	"kore/values.yaml":                             koreValuesYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"kore": {nil, map[string]*bintree{
		".helmignore": {koreHelmignore, map[string]*bintree{}},
		"Chart.yaml":  {koreChartYaml, map[string]*bintree{}},
		"scripts": {nil, map[string]*bintree{
			"loadbalancer_endpoint_detect.sh": {koreScriptsLoadbalancer_endpoint_detectSh, map[string]*bintree{}},
		}},
		"templates": {nil, map[string]*bintree{
			"NOTES.txt":              {koreTemplatesNotesTxt, map[string]*bintree{}},
			"_helpers.tpl":           {koreTemplates_helpersTpl, map[string]*bintree{}},
			"endpoint_discover.yaml": {koreTemplatesEndpoint_discoverYaml, map[string]*bintree{}},
			"ingress.yaml":           {koreTemplatesIngressYaml, map[string]*bintree{}},
			"kore.yml":               {koreTemplatesKoreYml, map[string]*bintree{}},
			"mysql.yaml":             {koreTemplatesMysqlYaml, map[string]*bintree{}},
			"portal.yml":             {koreTemplatesPortalYml, map[string]*bintree{}},
			"secret.yaml":            {koreTemplatesSecretYaml, map[string]*bintree{}},
		}},
		"values.yaml": {koreValuesYaml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
