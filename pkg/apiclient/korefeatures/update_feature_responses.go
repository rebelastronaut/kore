// Code generated by go-swagger; DO NOT EDIT.

package korefeatures

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// UpdateFeatureReader is a Reader for the UpdateFeature structure.
type UpdateFeatureReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateFeatureReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateFeatureOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateFeatureBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateFeatureUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateFeatureForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateFeatureInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateFeatureOK creates a UpdateFeatureOK with default headers values
func NewUpdateFeatureOK() *UpdateFeatureOK {
	return &UpdateFeatureOK{}
}

/*UpdateFeatureOK handles this case with default header values.

Contains the feature definition
*/
type UpdateFeatureOK struct {
	Payload *models.V1KoreFeature
}

func (o *UpdateFeatureOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/korefeatures/{name}][%d] updateFeatureOK  %+v", 200, o.Payload)
}

func (o *UpdateFeatureOK) GetPayload() *models.V1KoreFeature {
	return o.Payload
}

func (o *UpdateFeatureOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1KoreFeature)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateFeatureBadRequest creates a UpdateFeatureBadRequest with default headers values
func NewUpdateFeatureBadRequest() *UpdateFeatureBadRequest {
	return &UpdateFeatureBadRequest{}
}

/*UpdateFeatureBadRequest handles this case with default header values.

Validation error of supplied parameters/body
*/
type UpdateFeatureBadRequest struct {
	Payload *models.ValidationError
}

func (o *UpdateFeatureBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/korefeatures/{name}][%d] updateFeatureBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateFeatureBadRequest) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *UpdateFeatureBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateFeatureUnauthorized creates a UpdateFeatureUnauthorized with default headers values
func NewUpdateFeatureUnauthorized() *UpdateFeatureUnauthorized {
	return &UpdateFeatureUnauthorized{}
}

/*UpdateFeatureUnauthorized handles this case with default header values.

If not authenticated
*/
type UpdateFeatureUnauthorized struct {
}

func (o *UpdateFeatureUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/korefeatures/{name}][%d] updateFeatureUnauthorized ", 401)
}

func (o *UpdateFeatureUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateFeatureForbidden creates a UpdateFeatureForbidden with default headers values
func NewUpdateFeatureForbidden() *UpdateFeatureForbidden {
	return &UpdateFeatureForbidden{}
}

/*UpdateFeatureForbidden handles this case with default header values.

If authenticated but not authorized
*/
type UpdateFeatureForbidden struct {
}

func (o *UpdateFeatureForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/korefeatures/{name}][%d] updateFeatureForbidden ", 403)
}

func (o *UpdateFeatureForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateFeatureInternalServerError creates a UpdateFeatureInternalServerError with default headers values
func NewUpdateFeatureInternalServerError() *UpdateFeatureInternalServerError {
	return &UpdateFeatureInternalServerError{}
}

/*UpdateFeatureInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type UpdateFeatureInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *UpdateFeatureInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/korefeatures/{name}][%d] updateFeatureInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateFeatureInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *UpdateFeatureInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
