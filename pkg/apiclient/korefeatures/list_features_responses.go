// Code generated by go-swagger; DO NOT EDIT.

package korefeatures

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// ListFeaturesReader is a Reader for the ListFeatures structure.
type ListFeaturesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListFeaturesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListFeaturesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListFeaturesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListFeaturesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListFeaturesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListFeaturesOK creates a ListFeaturesOK with default headers values
func NewListFeaturesOK() *ListFeaturesOK {
	return &ListFeaturesOK{}
}

/*ListFeaturesOK handles this case with default header values.

A list of all features known to the system
*/
type ListFeaturesOK struct {
	Payload *models.V1KoreFeatureList
}

func (o *ListFeaturesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/korefeatures][%d] listFeaturesOK  %+v", 200, o.Payload)
}

func (o *ListFeaturesOK) GetPayload() *models.V1KoreFeatureList {
	return o.Payload
}

func (o *ListFeaturesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1KoreFeatureList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListFeaturesUnauthorized creates a ListFeaturesUnauthorized with default headers values
func NewListFeaturesUnauthorized() *ListFeaturesUnauthorized {
	return &ListFeaturesUnauthorized{}
}

/*ListFeaturesUnauthorized handles this case with default header values.

If not authenticated
*/
type ListFeaturesUnauthorized struct {
}

func (o *ListFeaturesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/korefeatures][%d] listFeaturesUnauthorized ", 401)
}

func (o *ListFeaturesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListFeaturesForbidden creates a ListFeaturesForbidden with default headers values
func NewListFeaturesForbidden() *ListFeaturesForbidden {
	return &ListFeaturesForbidden{}
}

/*ListFeaturesForbidden handles this case with default header values.

If authenticated but not authorized
*/
type ListFeaturesForbidden struct {
}

func (o *ListFeaturesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/korefeatures][%d] listFeaturesForbidden ", 403)
}

func (o *ListFeaturesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListFeaturesInternalServerError creates a ListFeaturesInternalServerError with default headers values
func NewListFeaturesInternalServerError() *ListFeaturesInternalServerError {
	return &ListFeaturesInternalServerError{}
}

/*ListFeaturesInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type ListFeaturesInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *ListFeaturesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/korefeatures][%d] listFeaturesInternalServerError  %+v", 500, o.Payload)
}

func (o *ListFeaturesInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *ListFeaturesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
