// Code generated by go-swagger; DO NOT EDIT.

package korefeatures

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// GetFeatureReader is a Reader for the GetFeature structure.
type GetFeatureReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFeatureReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFeatureOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetFeatureUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFeatureForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFeatureNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFeatureInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFeatureOK creates a GetFeatureOK with default headers values
func NewGetFeatureOK() *GetFeatureOK {
	return &GetFeatureOK{}
}

/*GetFeatureOK handles this case with default header values.

Contains the feature definition
*/
type GetFeatureOK struct {
	Payload *models.V1KoreFeature
}

func (o *GetFeatureOK) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/korefeatures/{name}][%d] getFeatureOK  %+v", 200, o.Payload)
}

func (o *GetFeatureOK) GetPayload() *models.V1KoreFeature {
	return o.Payload
}

func (o *GetFeatureOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1KoreFeature)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFeatureUnauthorized creates a GetFeatureUnauthorized with default headers values
func NewGetFeatureUnauthorized() *GetFeatureUnauthorized {
	return &GetFeatureUnauthorized{}
}

/*GetFeatureUnauthorized handles this case with default header values.

If not authenticated
*/
type GetFeatureUnauthorized struct {
}

func (o *GetFeatureUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/korefeatures/{name}][%d] getFeatureUnauthorized ", 401)
}

func (o *GetFeatureUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFeatureForbidden creates a GetFeatureForbidden with default headers values
func NewGetFeatureForbidden() *GetFeatureForbidden {
	return &GetFeatureForbidden{}
}

/*GetFeatureForbidden handles this case with default header values.

If authenticated but not authorized
*/
type GetFeatureForbidden struct {
}

func (o *GetFeatureForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/korefeatures/{name}][%d] getFeatureForbidden ", 403)
}

func (o *GetFeatureForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFeatureNotFound creates a GetFeatureNotFound with default headers values
func NewGetFeatureNotFound() *GetFeatureNotFound {
	return &GetFeatureNotFound{}
}

/*GetFeatureNotFound handles this case with default header values.

the feature with the given name doesn't exist
*/
type GetFeatureNotFound struct {
}

func (o *GetFeatureNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/korefeatures/{name}][%d] getFeatureNotFound ", 404)
}

func (o *GetFeatureNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFeatureInternalServerError creates a GetFeatureInternalServerError with default headers values
func NewGetFeatureInternalServerError() *GetFeatureInternalServerError {
	return &GetFeatureInternalServerError{}
}

/*GetFeatureInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type GetFeatureInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *GetFeatureInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/korefeatures/{name}][%d] getFeatureInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFeatureInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *GetFeatureInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
