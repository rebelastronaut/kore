// Code generated by go-swagger; DO NOT EDIT.

package korefeatures

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// RemoveFeatureReader is a Reader for the RemoveFeature structure.
type RemoveFeatureReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveFeatureReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRemoveFeatureOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveFeatureBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRemoveFeatureUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRemoveFeatureForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRemoveFeatureNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemoveFeatureInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRemoveFeatureOK creates a RemoveFeatureOK with default headers values
func NewRemoveFeatureOK() *RemoveFeatureOK {
	return &RemoveFeatureOK{}
}

/*RemoveFeatureOK handles this case with default header values.

Contains the feature definition
*/
type RemoveFeatureOK struct {
	Payload *models.V1KoreFeature
}

func (o *RemoveFeatureOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/korefeatures/{name}][%d] removeFeatureOK  %+v", 200, o.Payload)
}

func (o *RemoveFeatureOK) GetPayload() *models.V1KoreFeature {
	return o.Payload
}

func (o *RemoveFeatureOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1KoreFeature)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveFeatureBadRequest creates a RemoveFeatureBadRequest with default headers values
func NewRemoveFeatureBadRequest() *RemoveFeatureBadRequest {
	return &RemoveFeatureBadRequest{}
}

/*RemoveFeatureBadRequest handles this case with default header values.

Validation error of supplied parameters/body
*/
type RemoveFeatureBadRequest struct {
	Payload *models.ValidationError
}

func (o *RemoveFeatureBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/korefeatures/{name}][%d] removeFeatureBadRequest  %+v", 400, o.Payload)
}

func (o *RemoveFeatureBadRequest) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *RemoveFeatureBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveFeatureUnauthorized creates a RemoveFeatureUnauthorized with default headers values
func NewRemoveFeatureUnauthorized() *RemoveFeatureUnauthorized {
	return &RemoveFeatureUnauthorized{}
}

/*RemoveFeatureUnauthorized handles this case with default header values.

If not authenticated
*/
type RemoveFeatureUnauthorized struct {
}

func (o *RemoveFeatureUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/korefeatures/{name}][%d] removeFeatureUnauthorized ", 401)
}

func (o *RemoveFeatureUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveFeatureForbidden creates a RemoveFeatureForbidden with default headers values
func NewRemoveFeatureForbidden() *RemoveFeatureForbidden {
	return &RemoveFeatureForbidden{}
}

/*RemoveFeatureForbidden handles this case with default header values.

If authenticated but not authorized
*/
type RemoveFeatureForbidden struct {
}

func (o *RemoveFeatureForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/korefeatures/{name}][%d] removeFeatureForbidden ", 403)
}

func (o *RemoveFeatureForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveFeatureNotFound creates a RemoveFeatureNotFound with default headers values
func NewRemoveFeatureNotFound() *RemoveFeatureNotFound {
	return &RemoveFeatureNotFound{}
}

/*RemoveFeatureNotFound handles this case with default header values.

the feature with the given name doesn't exist
*/
type RemoveFeatureNotFound struct {
}

func (o *RemoveFeatureNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/korefeatures/{name}][%d] removeFeatureNotFound ", 404)
}

func (o *RemoveFeatureNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveFeatureInternalServerError creates a RemoveFeatureInternalServerError with default headers values
func NewRemoveFeatureInternalServerError() *RemoveFeatureInternalServerError {
	return &RemoveFeatureInternalServerError{}
}

/*RemoveFeatureInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type RemoveFeatureInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *RemoveFeatureInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/korefeatures/{name}][%d] removeFeatureInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoveFeatureInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *RemoveFeatureInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
