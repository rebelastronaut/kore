// Code generated by go-swagger; DO NOT EDIT.

package metadata

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// GetKubernetesRegionsReader is a Reader for the GetKubernetesRegions structure.
type GetKubernetesRegionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKubernetesRegionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKubernetesRegionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetKubernetesRegionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKubernetesRegionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKubernetesRegionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKubernetesRegionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetKubernetesRegionsOK creates a GetKubernetesRegionsOK with default headers values
func NewGetKubernetesRegionsOK() *GetKubernetesRegionsOK {
	return &GetKubernetesRegionsOK{}
}

/*GetKubernetesRegionsOK handles this case with default header values.

A list of all the regions organised by continent
*/
type GetKubernetesRegionsOK struct {
	Payload *models.V1beta1ContinentList
}

func (o *GetKubernetesRegionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/metadata/k8s/{provider}/regions][%d] getKubernetesRegionsOK  %+v", 200, o.Payload)
}

func (o *GetKubernetesRegionsOK) GetPayload() *models.V1beta1ContinentList {
	return o.Payload
}

func (o *GetKubernetesRegionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1beta1ContinentList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKubernetesRegionsUnauthorized creates a GetKubernetesRegionsUnauthorized with default headers values
func NewGetKubernetesRegionsUnauthorized() *GetKubernetesRegionsUnauthorized {
	return &GetKubernetesRegionsUnauthorized{}
}

/*GetKubernetesRegionsUnauthorized handles this case with default header values.

If not authenticated
*/
type GetKubernetesRegionsUnauthorized struct {
}

func (o *GetKubernetesRegionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/metadata/k8s/{provider}/regions][%d] getKubernetesRegionsUnauthorized ", 401)
}

func (o *GetKubernetesRegionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKubernetesRegionsForbidden creates a GetKubernetesRegionsForbidden with default headers values
func NewGetKubernetesRegionsForbidden() *GetKubernetesRegionsForbidden {
	return &GetKubernetesRegionsForbidden{}
}

/*GetKubernetesRegionsForbidden handles this case with default header values.

If authenticated but not authorized
*/
type GetKubernetesRegionsForbidden struct {
}

func (o *GetKubernetesRegionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/metadata/k8s/{provider}/regions][%d] getKubernetesRegionsForbidden ", 403)
}

func (o *GetKubernetesRegionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKubernetesRegionsNotFound creates a GetKubernetesRegionsNotFound with default headers values
func NewGetKubernetesRegionsNotFound() *GetKubernetesRegionsNotFound {
	return &GetKubernetesRegionsNotFound{}
}

/*GetKubernetesRegionsNotFound handles this case with default header values.

provider doesn't exist
*/
type GetKubernetesRegionsNotFound struct {
}

func (o *GetKubernetesRegionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/metadata/k8s/{provider}/regions][%d] getKubernetesRegionsNotFound ", 404)
}

func (o *GetKubernetesRegionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKubernetesRegionsInternalServerError creates a GetKubernetesRegionsInternalServerError with default headers values
func NewGetKubernetesRegionsInternalServerError() *GetKubernetesRegionsInternalServerError {
	return &GetKubernetesRegionsInternalServerError{}
}

/*GetKubernetesRegionsInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type GetKubernetesRegionsInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *GetKubernetesRegionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/metadata/k8s/{provider}/regions][%d] getKubernetesRegionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetKubernetesRegionsInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *GetKubernetesRegionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
