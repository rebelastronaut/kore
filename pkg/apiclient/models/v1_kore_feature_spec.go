// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1KoreFeatureSpec v1 kore feature spec
//
// swagger:model v1.KoreFeatureSpec
type V1KoreFeatureSpec struct {

	// configuration
	// Required: true
	Configuration map[string]string `json:"configuration"`

	// enabled
	// Required: true
	Enabled *bool `json:"enabled"`

	// feature type
	// Required: true
	FeatureType *string `json:"featureType"`
}

// Validate validates this v1 kore feature spec
func (m *V1KoreFeatureSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConfiguration(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFeatureType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1KoreFeatureSpec) validateConfiguration(formats strfmt.Registry) error {

	return nil
}

func (m *V1KoreFeatureSpec) validateEnabled(formats strfmt.Registry) error {

	if err := validate.Required("enabled", "body", m.Enabled); err != nil {
		return err
	}

	return nil
}

func (m *V1KoreFeatureSpec) validateFeatureType(formats strfmt.Registry) error {

	if err := validate.Required("featureType", "body", m.FeatureType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1KoreFeatureSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1KoreFeatureSpec) UnmarshalBinary(b []byte) error {
	var res V1KoreFeatureSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
