// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1beta1InstanceType v1beta1 instance type
//
// swagger:model v1beta1.InstanceType
type V1beta1InstanceType struct {

	// category
	// Required: true
	Category *string `json:"category"`

	// m cpus
	// Required: true
	MCpus *int64 `json:"mCpus"`

	// mem
	// Required: true
	Mem *int64 `json:"mem"`

	// name
	// Required: true
	Name *string `json:"name"`

	// prices
	// Required: true
	Prices map[string]int64 `json:"prices"`
}

// Validate validates this v1beta1 instance type
func (m *V1beta1InstanceType) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCategory(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMCpus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMem(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePrices(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1beta1InstanceType) validateCategory(formats strfmt.Registry) error {

	if err := validate.Required("category", "body", m.Category); err != nil {
		return err
	}

	return nil
}

func (m *V1beta1InstanceType) validateMCpus(formats strfmt.Registry) error {

	if err := validate.Required("mCpus", "body", m.MCpus); err != nil {
		return err
	}

	return nil
}

func (m *V1beta1InstanceType) validateMem(formats strfmt.Registry) error {

	if err := validate.Required("mem", "body", m.Mem); err != nil {
		return err
	}

	return nil
}

func (m *V1beta1InstanceType) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *V1beta1InstanceType) validatePrices(formats strfmt.Registry) error {

	return nil
}

// MarshalBinary interface implementation
func (m *V1beta1InstanceType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1beta1InstanceType) UnmarshalBinary(b []byte) error {
	var res V1beta1InstanceType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
