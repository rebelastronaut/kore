// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V1alpha1AWSOrganizationSpec v1alpha1 a w s organization spec
//
// swagger:model v1alpha1.AWSOrganizationSpec
type V1alpha1AWSOrganizationSpec struct {

	// credentials ref
	// Required: true
	CredentialsRef *V1SecretReference `json:"credentialsRef"`

	// ou name
	// Required: true
	OuName *string `json:"ouName"`

	// region
	// Required: true
	Region *string `json:"region"`

	// role a r n
	// Required: true
	RoleARN *string `json:"roleARN"`

	// sso user
	// Required: true
	SsoUser *V1alpha1SSOUser `json:"ssoUser"`
}

// Validate validates this v1alpha1 a w s organization spec
func (m *V1alpha1AWSOrganizationSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCredentialsRef(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOuName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRegion(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRoleARN(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSsoUser(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V1alpha1AWSOrganizationSpec) validateCredentialsRef(formats strfmt.Registry) error {

	if err := validate.Required("credentialsRef", "body", m.CredentialsRef); err != nil {
		return err
	}

	if m.CredentialsRef != nil {
		if err := m.CredentialsRef.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("credentialsRef")
			}
			return err
		}
	}

	return nil
}

func (m *V1alpha1AWSOrganizationSpec) validateOuName(formats strfmt.Registry) error {

	if err := validate.Required("ouName", "body", m.OuName); err != nil {
		return err
	}

	return nil
}

func (m *V1alpha1AWSOrganizationSpec) validateRegion(formats strfmt.Registry) error {

	if err := validate.Required("region", "body", m.Region); err != nil {
		return err
	}

	return nil
}

func (m *V1alpha1AWSOrganizationSpec) validateRoleARN(formats strfmt.Registry) error {

	if err := validate.Required("roleARN", "body", m.RoleARN); err != nil {
		return err
	}

	return nil
}

func (m *V1alpha1AWSOrganizationSpec) validateSsoUser(formats strfmt.Registry) error {

	if err := validate.Required("ssoUser", "body", m.SsoUser); err != nil {
		return err
	}

	if m.SsoUser != nil {
		if err := m.SsoUser.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ssoUser")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V1alpha1AWSOrganizationSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1alpha1AWSOrganizationSpec) UnmarshalBinary(b []byte) error {
	var res V1alpha1AWSOrganizationSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
