// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// LoginReader is a Reader for the Login structure.
type LoginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LoginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLoginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLoginBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewLoginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLoginForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLoginInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewLoginOK creates a LoginOK with default headers values
func NewLoginOK() *LoginOK {
	return &LoginOK{}
}

/*LoginOK handles this case with default header values.

An access token and a refresh token to access Kore
*/
type LoginOK struct {
	Payload *models.TypesIssuedToken
}

func (o *LoginOK) Error() string {
	return fmt.Sprintf("[POST /api/v1alpha1/login][%d] loginOK  %+v", 200, o.Payload)
}

func (o *LoginOK) GetPayload() *models.TypesIssuedToken {
	return o.Payload
}

func (o *LoginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TypesIssuedToken)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoginBadRequest creates a LoginBadRequest with default headers values
func NewLoginBadRequest() *LoginBadRequest {
	return &LoginBadRequest{}
}

/*LoginBadRequest handles this case with default header values.

Validation error of supplied parameters/body
*/
type LoginBadRequest struct {
	Payload *models.ValidationError
}

func (o *LoginBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1alpha1/login][%d] loginBadRequest  %+v", 400, o.Payload)
}

func (o *LoginBadRequest) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *LoginBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoginUnauthorized creates a LoginUnauthorized with default headers values
func NewLoginUnauthorized() *LoginUnauthorized {
	return &LoginUnauthorized{}
}

/*LoginUnauthorized handles this case with default header values.

If not authenticated
*/
type LoginUnauthorized struct {
}

func (o *LoginUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1alpha1/login][%d] loginUnauthorized ", 401)
}

func (o *LoginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoginForbidden creates a LoginForbidden with default headers values
func NewLoginForbidden() *LoginForbidden {
	return &LoginForbidden{}
}

/*LoginForbidden handles this case with default header values.

If authenticated but not authorized
*/
type LoginForbidden struct {
}

func (o *LoginForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1alpha1/login][%d] loginForbidden ", 403)
}

func (o *LoginForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoginInternalServerError creates a LoginInternalServerError with default headers values
func NewLoginInternalServerError() *LoginInternalServerError {
	return &LoginInternalServerError{}
}

/*LoginInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type LoginInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *LoginInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1alpha1/login][%d] loginInternalServerError  %+v", 500, o.Payload)
}

func (o *LoginInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *LoginInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
