// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetServicePlanDetailsParams creates a new GetServicePlanDetailsParams object
// with the default values initialized.
func NewGetServicePlanDetailsParams() *GetServicePlanDetailsParams {
	var ()
	return &GetServicePlanDetailsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetServicePlanDetailsParamsWithTimeout creates a new GetServicePlanDetailsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetServicePlanDetailsParamsWithTimeout(timeout time.Duration) *GetServicePlanDetailsParams {
	var ()
	return &GetServicePlanDetailsParams{

		timeout: timeout,
	}
}

// NewGetServicePlanDetailsParamsWithContext creates a new GetServicePlanDetailsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetServicePlanDetailsParamsWithContext(ctx context.Context) *GetServicePlanDetailsParams {
	var ()
	return &GetServicePlanDetailsParams{

		Context: ctx,
	}
}

// NewGetServicePlanDetailsParamsWithHTTPClient creates a new GetServicePlanDetailsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetServicePlanDetailsParamsWithHTTPClient(client *http.Client) *GetServicePlanDetailsParams {
	var ()
	return &GetServicePlanDetailsParams{
		HTTPClient: client,
	}
}

/*GetServicePlanDetailsParams contains all the parameters to send to the API endpoint
for the get service plan details operation typically these are written to a http.Request
*/
type GetServicePlanDetailsParams struct {

	/*Cluster
	  The name of the cluster where the service would be created

	*/
	Cluster *string
	/*Name
	  The name of the service plan

	*/
	Name string
	/*Team
	  The name of the team which intends to use this plan

	*/
	Team *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get service plan details params
func (o *GetServicePlanDetailsParams) WithTimeout(timeout time.Duration) *GetServicePlanDetailsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get service plan details params
func (o *GetServicePlanDetailsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get service plan details params
func (o *GetServicePlanDetailsParams) WithContext(ctx context.Context) *GetServicePlanDetailsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get service plan details params
func (o *GetServicePlanDetailsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get service plan details params
func (o *GetServicePlanDetailsParams) WithHTTPClient(client *http.Client) *GetServicePlanDetailsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get service plan details params
func (o *GetServicePlanDetailsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCluster adds the cluster to the get service plan details params
func (o *GetServicePlanDetailsParams) WithCluster(cluster *string) *GetServicePlanDetailsParams {
	o.SetCluster(cluster)
	return o
}

// SetCluster adds the cluster to the get service plan details params
func (o *GetServicePlanDetailsParams) SetCluster(cluster *string) {
	o.Cluster = cluster
}

// WithName adds the name to the get service plan details params
func (o *GetServicePlanDetailsParams) WithName(name string) *GetServicePlanDetailsParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get service plan details params
func (o *GetServicePlanDetailsParams) SetName(name string) {
	o.Name = name
}

// WithTeam adds the team to the get service plan details params
func (o *GetServicePlanDetailsParams) WithTeam(team *string) *GetServicePlanDetailsParams {
	o.SetTeam(team)
	return o
}

// SetTeam adds the team to the get service plan details params
func (o *GetServicePlanDetailsParams) SetTeam(team *string) {
	o.Team = team
}

// WriteToRequest writes these params to a swagger request
func (o *GetServicePlanDetailsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Cluster != nil {

		// query param cluster
		var qrCluster string
		if o.Cluster != nil {
			qrCluster = *o.Cluster
		}
		qCluster := qrCluster
		if qCluster != "" {
			if err := r.SetQueryParam("cluster", qCluster); err != nil {
				return err
			}
		}

	}

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	if o.Team != nil {

		// query param team
		var qrTeam string
		if o.Team != nil {
			qrTeam = *o.Team
		}
		qTeam := qrTeam
		if qTeam != "" {
			if err := r.SetQueryParam("team", qTeam); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
