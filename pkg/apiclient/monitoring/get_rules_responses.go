// Code generated by go-swagger; DO NOT EDIT.

package monitoring

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// GetRulesReader is a Reader for the GetRules structure.
type GetRulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetRulesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRulesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRulesOK creates a GetRulesOK with default headers values
func NewGetRulesOK() *GetRulesOK {
	return &GetRulesOK{}
}

/*GetRulesOK handles this case with default header values.

The rule has been deleted
*/
type GetRulesOK struct {
	Payload *models.V1beta1Rule
}

func (o *GetRulesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/monitoring/rules/{group}/{version}/{kind}/{namespace}/{resource}][%d] getRulesOK  %+v", 200, o.Payload)
}

func (o *GetRulesOK) GetPayload() *models.V1beta1Rule {
	return o.Payload
}

func (o *GetRulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1beta1Rule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRulesBadRequest creates a GetRulesBadRequest with default headers values
func NewGetRulesBadRequest() *GetRulesBadRequest {
	return &GetRulesBadRequest{}
}

/*GetRulesBadRequest handles this case with default header values.

Validation error of supplied parameters/body
*/
type GetRulesBadRequest struct {
	Payload *models.ValidationError
}

func (o *GetRulesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/monitoring/rules/{group}/{version}/{kind}/{namespace}/{resource}][%d] getRulesBadRequest  %+v", 400, o.Payload)
}

func (o *GetRulesBadRequest) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *GetRulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRulesUnauthorized creates a GetRulesUnauthorized with default headers values
func NewGetRulesUnauthorized() *GetRulesUnauthorized {
	return &GetRulesUnauthorized{}
}

/*GetRulesUnauthorized handles this case with default header values.

If not authenticated
*/
type GetRulesUnauthorized struct {
}

func (o *GetRulesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/monitoring/rules/{group}/{version}/{kind}/{namespace}/{resource}][%d] getRulesUnauthorized ", 401)
}

func (o *GetRulesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRulesForbidden creates a GetRulesForbidden with default headers values
func NewGetRulesForbidden() *GetRulesForbidden {
	return &GetRulesForbidden{}
}

/*GetRulesForbidden handles this case with default header values.

If authenticated but not authorized
*/
type GetRulesForbidden struct {
}

func (o *GetRulesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/monitoring/rules/{group}/{version}/{kind}/{namespace}/{resource}][%d] getRulesForbidden ", 403)
}

func (o *GetRulesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRulesInternalServerError creates a GetRulesInternalServerError with default headers values
func NewGetRulesInternalServerError() *GetRulesInternalServerError {
	return &GetRulesInternalServerError{}
}

/*GetRulesInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type GetRulesInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *GetRulesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/monitoring/rules/{group}/{version}/{kind}/{namespace}/{resource}][%d] getRulesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRulesInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *GetRulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
