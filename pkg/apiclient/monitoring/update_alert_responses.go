// Code generated by go-swagger; DO NOT EDIT.

package monitoring

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// UpdateAlertReader is a Reader for the UpdateAlert structure.
type UpdateAlertReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAlertReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateAlertOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateAlertBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateAlertUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateAlertForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateAlertInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateAlertOK creates a UpdateAlertOK with default headers values
func NewUpdateAlertOK() *UpdateAlertOK {
	return &UpdateAlertOK{}
}

/*UpdateAlertOK handles this case with default header values.

The alert has been successfully stored
*/
type UpdateAlertOK struct {
}

func (o *UpdateAlertOK) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/monitoring/alerts/status][%d] updateAlertOK ", 200)
}

func (o *UpdateAlertOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAlertBadRequest creates a UpdateAlertBadRequest with default headers values
func NewUpdateAlertBadRequest() *UpdateAlertBadRequest {
	return &UpdateAlertBadRequest{}
}

/*UpdateAlertBadRequest handles this case with default header values.

Validation error of supplied parameters/body
*/
type UpdateAlertBadRequest struct {
	Payload *models.ValidationError
}

func (o *UpdateAlertBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/monitoring/alerts/status][%d] updateAlertBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateAlertBadRequest) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *UpdateAlertBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAlertUnauthorized creates a UpdateAlertUnauthorized with default headers values
func NewUpdateAlertUnauthorized() *UpdateAlertUnauthorized {
	return &UpdateAlertUnauthorized{}
}

/*UpdateAlertUnauthorized handles this case with default header values.

If not authenticated
*/
type UpdateAlertUnauthorized struct {
}

func (o *UpdateAlertUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/monitoring/alerts/status][%d] updateAlertUnauthorized ", 401)
}

func (o *UpdateAlertUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAlertForbidden creates a UpdateAlertForbidden with default headers values
func NewUpdateAlertForbidden() *UpdateAlertForbidden {
	return &UpdateAlertForbidden{}
}

/*UpdateAlertForbidden handles this case with default header values.

If authenticated but not authorized
*/
type UpdateAlertForbidden struct {
}

func (o *UpdateAlertForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/monitoring/alerts/status][%d] updateAlertForbidden ", 403)
}

func (o *UpdateAlertForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAlertInternalServerError creates a UpdateAlertInternalServerError with default headers values
func NewUpdateAlertInternalServerError() *UpdateAlertInternalServerError {
	return &UpdateAlertInternalServerError{}
}

/*UpdateAlertInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type UpdateAlertInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *UpdateAlertInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/v1alpha1/monitoring/alerts/status][%d] updateAlertInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateAlertInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *UpdateAlertInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
