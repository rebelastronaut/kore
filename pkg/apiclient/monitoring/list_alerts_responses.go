// Code generated by go-swagger; DO NOT EDIT.

package monitoring

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// ListAlertsReader is a Reader for the ListAlerts structure.
type ListAlertsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAlertsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAlertsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListAlertsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListAlertsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListAlertsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListAlertsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListAlertsOK creates a ListAlertsOK with default headers values
func NewListAlertsOK() *ListAlertsOK {
	return &ListAlertsOK{}
}

/*ListAlertsOK handles this case with default header values.

Listing of the alert statuses in kore
*/
type ListAlertsOK struct {
	Payload *models.V1beta1AlertList
}

func (o *ListAlertsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/monitoring/alerts][%d] listAlertsOK  %+v", 200, o.Payload)
}

func (o *ListAlertsOK) GetPayload() *models.V1beta1AlertList {
	return o.Payload
}

func (o *ListAlertsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1beta1AlertList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAlertsBadRequest creates a ListAlertsBadRequest with default headers values
func NewListAlertsBadRequest() *ListAlertsBadRequest {
	return &ListAlertsBadRequest{}
}

/*ListAlertsBadRequest handles this case with default header values.

Validation error of supplied parameters/body
*/
type ListAlertsBadRequest struct {
	Payload *models.ValidationError
}

func (o *ListAlertsBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/monitoring/alerts][%d] listAlertsBadRequest  %+v", 400, o.Payload)
}

func (o *ListAlertsBadRequest) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *ListAlertsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAlertsUnauthorized creates a ListAlertsUnauthorized with default headers values
func NewListAlertsUnauthorized() *ListAlertsUnauthorized {
	return &ListAlertsUnauthorized{}
}

/*ListAlertsUnauthorized handles this case with default header values.

If not authenticated
*/
type ListAlertsUnauthorized struct {
}

func (o *ListAlertsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/monitoring/alerts][%d] listAlertsUnauthorized ", 401)
}

func (o *ListAlertsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListAlertsForbidden creates a ListAlertsForbidden with default headers values
func NewListAlertsForbidden() *ListAlertsForbidden {
	return &ListAlertsForbidden{}
}

/*ListAlertsForbidden handles this case with default header values.

If authenticated but not authorized
*/
type ListAlertsForbidden struct {
}

func (o *ListAlertsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/monitoring/alerts][%d] listAlertsForbidden ", 403)
}

func (o *ListAlertsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListAlertsInternalServerError creates a ListAlertsInternalServerError with default headers values
func NewListAlertsInternalServerError() *ListAlertsInternalServerError {
	return &ListAlertsInternalServerError{}
}

/*ListAlertsInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type ListAlertsInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *ListAlertsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/monitoring/alerts][%d] listAlertsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListAlertsInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *ListAlertsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
