// Code generated by go-swagger; DO NOT EDIT.

package monitoring

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewListTeamAlertsParams creates a new ListTeamAlertsParams object
// with the default values initialized.
func NewListTeamAlertsParams() *ListTeamAlertsParams {
	var ()
	return &ListTeamAlertsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListTeamAlertsParamsWithTimeout creates a new ListTeamAlertsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListTeamAlertsParamsWithTimeout(timeout time.Duration) *ListTeamAlertsParams {
	var ()
	return &ListTeamAlertsParams{

		timeout: timeout,
	}
}

// NewListTeamAlertsParamsWithContext creates a new ListTeamAlertsParams object
// with the default values initialized, and the ability to set a context for a request
func NewListTeamAlertsParamsWithContext(ctx context.Context) *ListTeamAlertsParams {
	var ()
	return &ListTeamAlertsParams{

		Context: ctx,
	}
}

// NewListTeamAlertsParamsWithHTTPClient creates a new ListTeamAlertsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListTeamAlertsParamsWithHTTPClient(client *http.Client) *ListTeamAlertsParams {
	var ()
	return &ListTeamAlertsParams{
		HTTPClient: client,
	}
}

/*ListTeamAlertsParams contains all the parameters to send to the API endpoint
for the list team alerts operation typically these are written to a http.Request
*/
type ListTeamAlertsParams struct {

	/*History
	  The number of historical records to retrieve

	*/
	History *string
	/*Latest
	  Indicates to we only want the latest alert status

	*/
	Latest *string
	/*Status
	  The alert to filter the results by

	*/
	Status *string
	/*Team
	  Is the name of the team the alerts reside

	*/
	Team string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list team alerts params
func (o *ListTeamAlertsParams) WithTimeout(timeout time.Duration) *ListTeamAlertsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list team alerts params
func (o *ListTeamAlertsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list team alerts params
func (o *ListTeamAlertsParams) WithContext(ctx context.Context) *ListTeamAlertsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list team alerts params
func (o *ListTeamAlertsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list team alerts params
func (o *ListTeamAlertsParams) WithHTTPClient(client *http.Client) *ListTeamAlertsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list team alerts params
func (o *ListTeamAlertsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithHistory adds the history to the list team alerts params
func (o *ListTeamAlertsParams) WithHistory(history *string) *ListTeamAlertsParams {
	o.SetHistory(history)
	return o
}

// SetHistory adds the history to the list team alerts params
func (o *ListTeamAlertsParams) SetHistory(history *string) {
	o.History = history
}

// WithLatest adds the latest to the list team alerts params
func (o *ListTeamAlertsParams) WithLatest(latest *string) *ListTeamAlertsParams {
	o.SetLatest(latest)
	return o
}

// SetLatest adds the latest to the list team alerts params
func (o *ListTeamAlertsParams) SetLatest(latest *string) {
	o.Latest = latest
}

// WithStatus adds the status to the list team alerts params
func (o *ListTeamAlertsParams) WithStatus(status *string) *ListTeamAlertsParams {
	o.SetStatus(status)
	return o
}

// SetStatus adds the status to the list team alerts params
func (o *ListTeamAlertsParams) SetStatus(status *string) {
	o.Status = status
}

// WithTeam adds the team to the list team alerts params
func (o *ListTeamAlertsParams) WithTeam(team string) *ListTeamAlertsParams {
	o.SetTeam(team)
	return o
}

// SetTeam adds the team to the list team alerts params
func (o *ListTeamAlertsParams) SetTeam(team string) {
	o.Team = team
}

// WriteToRequest writes these params to a swagger request
func (o *ListTeamAlertsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.History != nil {

		// query param history
		var qrHistory string
		if o.History != nil {
			qrHistory = *o.History
		}
		qHistory := qrHistory
		if qHistory != "" {
			if err := r.SetQueryParam("history", qHistory); err != nil {
				return err
			}
		}

	}

	if o.Latest != nil {

		// query param latest
		var qrLatest string
		if o.Latest != nil {
			qrLatest = *o.Latest
		}
		qLatest := qrLatest
		if qLatest != "" {
			if err := r.SetQueryParam("latest", qLatest); err != nil {
				return err
			}
		}

	}

	if o.Status != nil {

		// query param status
		var qrStatus string
		if o.Status != nil {
			qrStatus = *o.Status
		}
		qStatus := qrStatus
		if qStatus != "" {
			if err := r.SetQueryParam("status", qStatus); err != nil {
				return err
			}
		}

	}

	// path param team
	if err := r.SetPathParam("team", o.Team); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
