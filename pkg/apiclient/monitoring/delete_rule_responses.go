// Code generated by go-swagger; DO NOT EDIT.

package monitoring

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// DeleteRuleReader is a Reader for the DeleteRule structure.
type DeleteRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteRuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteRuleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteRuleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteRuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteRuleOK creates a DeleteRuleOK with default headers values
func NewDeleteRuleOK() *DeleteRuleOK {
	return &DeleteRuleOK{}
}

/*DeleteRuleOK handles this case with default header values.

The rule has been deleted
*/
type DeleteRuleOK struct {
	Payload *models.V1beta1AlertRule
}

func (o *DeleteRuleOK) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/monitoring/rules/{group}/{version}/{kind}/{namespace}/{resource}/{name}][%d] deleteRuleOK  %+v", 200, o.Payload)
}

func (o *DeleteRuleOK) GetPayload() *models.V1beta1AlertRule {
	return o.Payload
}

func (o *DeleteRuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1beta1AlertRule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRuleBadRequest creates a DeleteRuleBadRequest with default headers values
func NewDeleteRuleBadRequest() *DeleteRuleBadRequest {
	return &DeleteRuleBadRequest{}
}

/*DeleteRuleBadRequest handles this case with default header values.

Validation error of supplied parameters/body
*/
type DeleteRuleBadRequest struct {
	Payload *models.ValidationError
}

func (o *DeleteRuleBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/monitoring/rules/{group}/{version}/{kind}/{namespace}/{resource}/{name}][%d] deleteRuleBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteRuleBadRequest) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *DeleteRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRuleUnauthorized creates a DeleteRuleUnauthorized with default headers values
func NewDeleteRuleUnauthorized() *DeleteRuleUnauthorized {
	return &DeleteRuleUnauthorized{}
}

/*DeleteRuleUnauthorized handles this case with default header values.

If not authenticated
*/
type DeleteRuleUnauthorized struct {
}

func (o *DeleteRuleUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/monitoring/rules/{group}/{version}/{kind}/{namespace}/{resource}/{name}][%d] deleteRuleUnauthorized ", 401)
}

func (o *DeleteRuleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRuleForbidden creates a DeleteRuleForbidden with default headers values
func NewDeleteRuleForbidden() *DeleteRuleForbidden {
	return &DeleteRuleForbidden{}
}

/*DeleteRuleForbidden handles this case with default header values.

If authenticated but not authorized
*/
type DeleteRuleForbidden struct {
}

func (o *DeleteRuleForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/monitoring/rules/{group}/{version}/{kind}/{namespace}/{resource}/{name}][%d] deleteRuleForbidden ", 403)
}

func (o *DeleteRuleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRuleInternalServerError creates a DeleteRuleInternalServerError with default headers values
func NewDeleteRuleInternalServerError() *DeleteRuleInternalServerError {
	return &DeleteRuleInternalServerError{}
}

/*DeleteRuleInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type DeleteRuleInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *DeleteRuleInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /api/v1alpha1/monitoring/rules/{group}/{version}/{kind}/{namespace}/{resource}/{name}][%d] deleteRuleInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteRuleInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *DeleteRuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
