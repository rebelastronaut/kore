// Code generated by go-swagger; DO NOT EDIT.

package costestimates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetMetadataRegionsParams creates a new GetMetadataRegionsParams object
// with the default values initialized.
func NewGetMetadataRegionsParams() *GetMetadataRegionsParams {
	var ()
	return &GetMetadataRegionsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetMetadataRegionsParamsWithTimeout creates a new GetMetadataRegionsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetMetadataRegionsParamsWithTimeout(timeout time.Duration) *GetMetadataRegionsParams {
	var ()
	return &GetMetadataRegionsParams{

		timeout: timeout,
	}
}

// NewGetMetadataRegionsParamsWithContext creates a new GetMetadataRegionsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetMetadataRegionsParamsWithContext(ctx context.Context) *GetMetadataRegionsParams {
	var ()
	return &GetMetadataRegionsParams{

		Context: ctx,
	}
}

// NewGetMetadataRegionsParamsWithHTTPClient creates a new GetMetadataRegionsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetMetadataRegionsParamsWithHTTPClient(client *http.Client) *GetMetadataRegionsParams {
	var ()
	return &GetMetadataRegionsParams{
		HTTPClient: client,
	}
}

/*GetMetadataRegionsParams contains all the parameters to send to the API endpoint
for the get metadata regions operation typically these are written to a http.Request
*/
type GetMetadataRegionsParams struct {

	/*Cloud
	  The cloud provider to retrieve regions for

	*/
	Cloud string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get metadata regions params
func (o *GetMetadataRegionsParams) WithTimeout(timeout time.Duration) *GetMetadataRegionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get metadata regions params
func (o *GetMetadataRegionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get metadata regions params
func (o *GetMetadataRegionsParams) WithContext(ctx context.Context) *GetMetadataRegionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get metadata regions params
func (o *GetMetadataRegionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get metadata regions params
func (o *GetMetadataRegionsParams) WithHTTPClient(client *http.Client) *GetMetadataRegionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get metadata regions params
func (o *GetMetadataRegionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCloud adds the cloud to the get metadata regions params
func (o *GetMetadataRegionsParams) WithCloud(cloud string) *GetMetadataRegionsParams {
	o.SetCloud(cloud)
	return o
}

// SetCloud adds the cloud to the get metadata regions params
func (o *GetMetadataRegionsParams) SetCloud(cloud string) {
	o.Cloud = cloud
}

// WriteToRequest writes these params to a swagger request
func (o *GetMetadataRegionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cloud
	if err := r.SetPathParam("cloud", o.Cloud); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
