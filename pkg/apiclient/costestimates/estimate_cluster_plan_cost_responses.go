// Code generated by go-swagger; DO NOT EDIT.

package costestimates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// EstimateClusterPlanCostReader is a Reader for the EstimateClusterPlanCost structure.
type EstimateClusterPlanCostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EstimateClusterPlanCostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEstimateClusterPlanCostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEstimateClusterPlanCostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewEstimateClusterPlanCostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEstimateClusterPlanCostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEstimateClusterPlanCostInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewEstimateClusterPlanCostOK creates a EstimateClusterPlanCostOK with default headers values
func NewEstimateClusterPlanCostOK() *EstimateClusterPlanCostOK {
	return &EstimateClusterPlanCostOK{}
}

/*EstimateClusterPlanCostOK handles this case with default header values.

An estimate of the costs for the cluster plan
*/
type EstimateClusterPlanCostOK struct {
	Payload *models.V1beta1CostEstimate
}

func (o *EstimateClusterPlanCostOK) Error() string {
	return fmt.Sprintf("[POST /api/v1alpha1/costestimates/cluster][%d] estimateClusterPlanCostOK  %+v", 200, o.Payload)
}

func (o *EstimateClusterPlanCostOK) GetPayload() *models.V1beta1CostEstimate {
	return o.Payload
}

func (o *EstimateClusterPlanCostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1beta1CostEstimate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEstimateClusterPlanCostBadRequest creates a EstimateClusterPlanCostBadRequest with default headers values
func NewEstimateClusterPlanCostBadRequest() *EstimateClusterPlanCostBadRequest {
	return &EstimateClusterPlanCostBadRequest{}
}

/*EstimateClusterPlanCostBadRequest handles this case with default header values.

Validation error of supplied parameters/body
*/
type EstimateClusterPlanCostBadRequest struct {
	Payload *models.ValidationError
}

func (o *EstimateClusterPlanCostBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1alpha1/costestimates/cluster][%d] estimateClusterPlanCostBadRequest  %+v", 400, o.Payload)
}

func (o *EstimateClusterPlanCostBadRequest) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *EstimateClusterPlanCostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEstimateClusterPlanCostUnauthorized creates a EstimateClusterPlanCostUnauthorized with default headers values
func NewEstimateClusterPlanCostUnauthorized() *EstimateClusterPlanCostUnauthorized {
	return &EstimateClusterPlanCostUnauthorized{}
}

/*EstimateClusterPlanCostUnauthorized handles this case with default header values.

If not authenticated
*/
type EstimateClusterPlanCostUnauthorized struct {
}

func (o *EstimateClusterPlanCostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/v1alpha1/costestimates/cluster][%d] estimateClusterPlanCostUnauthorized ", 401)
}

func (o *EstimateClusterPlanCostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEstimateClusterPlanCostForbidden creates a EstimateClusterPlanCostForbidden with default headers values
func NewEstimateClusterPlanCostForbidden() *EstimateClusterPlanCostForbidden {
	return &EstimateClusterPlanCostForbidden{}
}

/*EstimateClusterPlanCostForbidden handles this case with default header values.

If authenticated but not authorized
*/
type EstimateClusterPlanCostForbidden struct {
}

func (o *EstimateClusterPlanCostForbidden) Error() string {
	return fmt.Sprintf("[POST /api/v1alpha1/costestimates/cluster][%d] estimateClusterPlanCostForbidden ", 403)
}

func (o *EstimateClusterPlanCostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEstimateClusterPlanCostInternalServerError creates a EstimateClusterPlanCostInternalServerError with default headers values
func NewEstimateClusterPlanCostInternalServerError() *EstimateClusterPlanCostInternalServerError {
	return &EstimateClusterPlanCostInternalServerError{}
}

/*EstimateClusterPlanCostInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type EstimateClusterPlanCostInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *EstimateClusterPlanCostInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1alpha1/costestimates/cluster][%d] estimateClusterPlanCostInternalServerError  %+v", 500, o.Payload)
}

func (o *EstimateClusterPlanCostInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *EstimateClusterPlanCostInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
