// Code generated by go-swagger; DO NOT EDIT.

package costestimates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// GetMetadataInstancesReader is a Reader for the GetMetadataInstances structure.
type GetMetadataInstancesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMetadataInstancesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMetadataInstancesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetMetadataInstancesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMetadataInstancesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMetadataInstancesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetMetadataInstancesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetMetadataInstancesOK creates a GetMetadataInstancesOK with default headers values
func NewGetMetadataInstancesOK() *GetMetadataInstancesOK {
	return &GetMetadataInstancesOK{}
}

/*GetMetadataInstancesOK handles this case with default header values.

A list of instance types with their pricing
*/
type GetMetadataInstancesOK struct {
	Payload *models.V1beta1InstanceTypeList
}

func (o *GetMetadataInstancesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/costestimates/metadata/{cloud}/regions/{region}/instances][%d] getMetadataInstancesOK  %+v", 200, o.Payload)
}

func (o *GetMetadataInstancesOK) GetPayload() *models.V1beta1InstanceTypeList {
	return o.Payload
}

func (o *GetMetadataInstancesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1beta1InstanceTypeList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetadataInstancesUnauthorized creates a GetMetadataInstancesUnauthorized with default headers values
func NewGetMetadataInstancesUnauthorized() *GetMetadataInstancesUnauthorized {
	return &GetMetadataInstancesUnauthorized{}
}

/*GetMetadataInstancesUnauthorized handles this case with default header values.

If not authenticated
*/
type GetMetadataInstancesUnauthorized struct {
}

func (o *GetMetadataInstancesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/costestimates/metadata/{cloud}/regions/{region}/instances][%d] getMetadataInstancesUnauthorized ", 401)
}

func (o *GetMetadataInstancesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMetadataInstancesForbidden creates a GetMetadataInstancesForbidden with default headers values
func NewGetMetadataInstancesForbidden() *GetMetadataInstancesForbidden {
	return &GetMetadataInstancesForbidden{}
}

/*GetMetadataInstancesForbidden handles this case with default header values.

If authenticated but not authorized
*/
type GetMetadataInstancesForbidden struct {
}

func (o *GetMetadataInstancesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/costestimates/metadata/{cloud}/regions/{region}/instances][%d] getMetadataInstancesForbidden ", 403)
}

func (o *GetMetadataInstancesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMetadataInstancesNotFound creates a GetMetadataInstancesNotFound with default headers values
func NewGetMetadataInstancesNotFound() *GetMetadataInstancesNotFound {
	return &GetMetadataInstancesNotFound{}
}

/*GetMetadataInstancesNotFound handles this case with default header values.

cloud or region doesn't exist
*/
type GetMetadataInstancesNotFound struct {
}

func (o *GetMetadataInstancesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/costestimates/metadata/{cloud}/regions/{region}/instances][%d] getMetadataInstancesNotFound ", 404)
}

func (o *GetMetadataInstancesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMetadataInstancesInternalServerError creates a GetMetadataInstancesInternalServerError with default headers values
func NewGetMetadataInstancesInternalServerError() *GetMetadataInstancesInternalServerError {
	return &GetMetadataInstancesInternalServerError{}
}

/*GetMetadataInstancesInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type GetMetadataInstancesInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *GetMetadataInstancesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/costestimates/metadata/{cloud}/regions/{region}/instances][%d] getMetadataInstancesInternalServerError  %+v", 500, o.Payload)
}

func (o *GetMetadataInstancesInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *GetMetadataInstancesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
