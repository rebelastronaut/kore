// Code generated by go-swagger; DO NOT EDIT.

package costestimates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/appvia/kore/pkg/apiclient/models"
)

// GetMetadataRegionsReader is a Reader for the GetMetadataRegions structure.
type GetMetadataRegionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMetadataRegionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMetadataRegionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetMetadataRegionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMetadataRegionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMetadataRegionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetMetadataRegionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetMetadataRegionsOK creates a GetMetadataRegionsOK with default headers values
func NewGetMetadataRegionsOK() *GetMetadataRegionsOK {
	return &GetMetadataRegionsOK{}
}

/*GetMetadataRegionsOK handles this case with default header values.

A list of all the regions organised by continent
*/
type GetMetadataRegionsOK struct {
	Payload *models.V1beta1ContinentList
}

func (o *GetMetadataRegionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/costestimates/metadata/{cloud}/regions][%d] getMetadataRegionsOK  %+v", 200, o.Payload)
}

func (o *GetMetadataRegionsOK) GetPayload() *models.V1beta1ContinentList {
	return o.Payload
}

func (o *GetMetadataRegionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1beta1ContinentList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetadataRegionsUnauthorized creates a GetMetadataRegionsUnauthorized with default headers values
func NewGetMetadataRegionsUnauthorized() *GetMetadataRegionsUnauthorized {
	return &GetMetadataRegionsUnauthorized{}
}

/*GetMetadataRegionsUnauthorized handles this case with default header values.

If not authenticated
*/
type GetMetadataRegionsUnauthorized struct {
}

func (o *GetMetadataRegionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/costestimates/metadata/{cloud}/regions][%d] getMetadataRegionsUnauthorized ", 401)
}

func (o *GetMetadataRegionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMetadataRegionsForbidden creates a GetMetadataRegionsForbidden with default headers values
func NewGetMetadataRegionsForbidden() *GetMetadataRegionsForbidden {
	return &GetMetadataRegionsForbidden{}
}

/*GetMetadataRegionsForbidden handles this case with default header values.

If authenticated but not authorized
*/
type GetMetadataRegionsForbidden struct {
}

func (o *GetMetadataRegionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/costestimates/metadata/{cloud}/regions][%d] getMetadataRegionsForbidden ", 403)
}

func (o *GetMetadataRegionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMetadataRegionsNotFound creates a GetMetadataRegionsNotFound with default headers values
func NewGetMetadataRegionsNotFound() *GetMetadataRegionsNotFound {
	return &GetMetadataRegionsNotFound{}
}

/*GetMetadataRegionsNotFound handles this case with default header values.

cloud doesn't exist
*/
type GetMetadataRegionsNotFound struct {
}

func (o *GetMetadataRegionsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/costestimates/metadata/{cloud}/regions][%d] getMetadataRegionsNotFound ", 404)
}

func (o *GetMetadataRegionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMetadataRegionsInternalServerError creates a GetMetadataRegionsInternalServerError with default headers values
func NewGetMetadataRegionsInternalServerError() *GetMetadataRegionsInternalServerError {
	return &GetMetadataRegionsInternalServerError{}
}

/*GetMetadataRegionsInternalServerError handles this case with default header values.

A generic API error containing the cause of the error
*/
type GetMetadataRegionsInternalServerError struct {
	Payload *models.ApiserverError
}

func (o *GetMetadataRegionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1alpha1/costestimates/metadata/{cloud}/regions][%d] getMetadataRegionsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetMetadataRegionsInternalServerError) GetPayload() *models.ApiserverError {
	return o.Payload
}

func (o *GetMetadataRegionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApiserverError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
