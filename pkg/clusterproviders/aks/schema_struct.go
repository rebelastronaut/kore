// Code generated by struct-gen; DO NOT EDIT.

package aks

type Configuration struct {
	// AuthProxyAllowedIps The networks which are allowed to connect to this cluster (e.g. via kubectl).
	AuthProxyAllowedIps []ConfigurationAuthProxyAllowedIP `json:"authProxyAllowedIPs"`
	// AuthorizedMasterNetworks The networks which are allowed to access the master control plane.
	AuthorizedMasterNetworks []ConfigurationAuthorizedMasterNetwork `json:"authorizedMasterNetworks"`
	// ClusterUsers Users who should be allowed to access this cluster.
	ClusterUsers []ConfigurationClusterUser `json:"clusterUsers,omitempty"`
	// DNSPrefix DNS name prefix to use with the hosted Kubernetes API server FQDN.
	DNSPrefix string `json:"dnsPrefix"`
	// DefaultTeamRole The default role that team members have on this cluster.
	DefaultTeamRole string `json:"defaultTeamRole,omitempty"`
	// Description Meaningful description of this cluster.
	Description string `json:"description"`
	// Domain The domain for this cluster.
	Domain                    string                     `json:"domain"`
	EnableDefaultTrafficBlock bool                       `json:"enableDefaultTrafficBlock,omitempty"`
	EnablePodSecurityPolicy   bool                       `json:"enablePodSecurityPolicy,omitempty"`
	InheritTeamMembers        bool                       `json:"inheritTeamMembers,omitempty"`
	LinuxProfile              *ConfigurationLinuxProfile `json:"linuxProfile,omitempty"`
	NetworkPlugin             string                     `json:"networkPlugin"`
	NetworkPolicy             string                     `json:"networkPolicy,omitempty"`
	NodePools                 []ConfigurationNodePool    `json:"nodePools"`
	PrivateClusterEnabled     bool                       `json:"privateClusterEnabled,omitempty"`
	// Region Geographical location for this cluster
	Region string `json:"region"`
	// Version Kubernetes version
	Version        string                       `json:"version"`
	WindowsProfile *ConfigurationWindowsProfile `json:"windowsProfile,omitempty"`
}

// The networks which are allowed to connect to this cluster (e.g. via kubectl).
type ConfigurationAuthProxyAllowedIP string

// The networks which are allowed to access the master control plane.
type ConfigurationAuthorizedMasterNetwork struct {
	Cidr string `json:"cidr"`
	Name string `json:"name"`
}

// Users who should be allowed to access this cluster.
type ConfigurationClusterUser struct {
	Roles    []ConfigurationRole `json:"roles"`
	Username string              `json:"username"`
}

// A set of labels to help Kubernetes workloads find this group
type ConfigurationLabel string

type ConfigurationLinuxProfile struct {
	AdminUsername string                      `json:"adminUsername"`
	SSHPublicKeys []ConfigurationSSHPublicKey `json:"sshPublicKeys"`
}

type ConfigurationNodePool struct {

	// DiskSize The amount of storage in GiB provisioned on the nodes in this group
	DiskSize int64 `json:"diskSize"`
	// EnableAutoscaler Add and remove nodes automatically based on load
	EnableAutoscaler bool `json:"enableAutoscaler,omitempty"`
	// ImageType The image type used by the nodes
	ImageType string `json:"imageType"`
	// Labels A set of labels to help Kubernetes workloads find this group
	Labels map[string]ConfigurationLabel `json:"labels,omitempty"`
	// MachineType The type of nodes used for this node pool
	MachineType string `json:"machineType"`
	// MaxPodsPerNode The maximum number of pods that can be scheduled onto each node of this pool - if left blank, it will set this automatically based on the machine type
	MaxPodsPerNode int64 `json:"maxPodsPerNode,omitempty"`
	// MaxSize The maximum nodes this pool should contain (if auto-scale enabled)
	MaxSize int64 `json:"maxSize,omitempty"`
	// MinSize The minimum nodes this pool should contain (if auto-scale enabled)
	MinSize int64 `json:"minSize,omitempty"`
	// Mode Type of the node pool.
	// System node pools serve the primary purpose of hosting critical system pods such as CoreDNS and tunnelfront.
	// User node pools serve the primary purpose of hosting your application pods.
	Mode string `json:"mode"`
	// Name Name of this node pool. Must be unique within the cluster.
	Name string `json:"name"`
	// Size How many nodes to build when provisioning this pool - if autoscaling enabled, this will be the initial size
	Size int64 `json:"size"`
	// Taints A collection of kubernetes taints to add on the nodes.
	Taints []ConfigurationTaint `json:"taints,omitempty"`
	// Version Node pool version, blank to use same version as cluster (recommended).
	Version string `json:"version,omitempty"`
}

type ConfigurationRole string

type ConfigurationSSHPublicKey string

// A collection of kubernetes taints to add on the nodes.
type ConfigurationTaint struct {
	// Effect The chosen effect of the taint
	Effect string `json:"effect"`
	// Key Taint key
	Key string `json:"key"`
	// Value Taint value
	Value string `json:"value"`
}

type ConfigurationWindowsProfile struct {
	AdminPassword string `json:"adminPassword"`
	AdminUsername string `json:"adminUsername"`
}
